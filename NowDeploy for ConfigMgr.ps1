#------------------------------------------------------------------------
# Source File Information (DO NOT MODIFY)
# Source ID: 08ffece6-afa1-4eb7-835f-423c219e5770
# Source File: Source\NowDeploy for ConfigMgr.psproj
#------------------------------------------------------------------------
#region Project Recovery Data (DO NOT MODIFY)
<#RecoveryData:
hAIAAB+LCAAAAAAABACFUstuwjAQvFfiHyIfKyUhPApVgw8tSsUBWhHUa2XCOnHr2JHjAOnX14lD
BerrsvbYszPascM1JHIPqp4TTXDvynHCZyXfINFOXIskU1KwD9jNUER4Cag9jBjXoGbo2ivK4K6p
uV12dgmOOW83tK2lqfYkA154+qhRa2SsXkCVTAo88ILQP4HuzrjAYo77U0ohgRuXUBK4I9hO3Olw
TN3RYJgMglsYTyb90O/IXWs3waYuAJvLc3gSl3xn7Bz/3K3sQAed+4pxM3kf4VgTpauiGcZ6/cZ0
1kBBgUggqkSizTgzFGfy4C4JE5FU+atJBeETajL6RzDOiGry36gKfpRfiL18B/eRyy3hRj5A2O7L
5in+UjdML2WapUIquCBaYPP4ys+iJ8VSJghvCCuSA17JwxwKLmuHSuU8SEFZukyVMS9MX+h/a+hd
hf7Fr/sEbesZE4QCAAA=#>
#endregion
<#
    .NOTES
    --------------------------------------------------------------------------------
     Code generated by:  SAPIEN Technologies, Inc., PowerShell Studio 2019 v5.6.160
     Generated on:       8/25/2019 5:50 PM
     Generated by:       NowUser1
    --------------------------------------------------------------------------------
    .DESCRIPTION
        Script generated by PowerShell Studio 2019
#>



#region Source: Startup.pss
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
YQAAAB+LCAAAAAAABACzCUpNzi9LLap0SSxJVAAyijPz82yVjPUMlex4uRQUbPyLMtMz8xJz3DJz
Uv0Sc1PtgksSi0pKC/QKiott9DFkebls9JGNtAMAoyFkEGEAAAA=#>
#endregion
#----------------------------------------------
#region Import Assemblies
#----------------------------------------------
#endregion Import Assemblies

#Define a Param block to use custom parameters in the project
#Param ($CustomParameter)

function Main {
<#
    .SYNOPSIS
        The Main function starts the project application.
    
    .PARAMETER Commandline
        $Commandline contains the complete argument string passed to the script packager executable.
    
    .NOTES
        Use this function to initialize your script and to call GUI forms.
		
    .NOTES
        To get the console output in the Packager (Forms Engine) use: 
		$ConsoleOutput (Type: System.Collections.ArrayList)
#>
	Param ([String]$Commandline)
		
	#--------------------------------------------------------------------------
	#TODO: Add initialization script here (Load modules and check requirements)
	
	
	#--------------------------------------------------------------------------
	
	if((Show-MainForm_psf) -eq 'OK')
	{
		
	}
	
	$script:ExitCode = 0 #Set the exit code for the Packager
}



#endregion Source: Startup.pss

#region Source: MainForm.psf
function Show-MainForm_psf
{
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
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
L2OaUyVvXwAA#>
#endregion
	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$MainForm = New-Object 'System.Windows.Forms.Form'
	$btnSaveCatalogXML = New-Object 'System.Windows.Forms.Button'
	$grpActions = New-Object 'System.Windows.Forms.GroupBox'
	$btnAppBuild = New-Object 'System.Windows.Forms.Button'
	$btnDownloadCatalog = New-Object 'System.Windows.Forms.Button'
	$lblApplicationList = New-Object 'System.Windows.Forms.Label'
	$labelCatalogActionsList = New-Object 'System.Windows.Forms.Label'
	$dvActions = New-Object 'System.Windows.Forms.DataGridView'
	$dvCatalog = New-Object 'System.Windows.Forms.DataGridView'
	$grpSettings = New-Object 'System.Windows.Forms.GroupBox'
	$btnLoadCatalog = New-Object 'System.Windows.Forms.Button'
	$horizonalLine1 = New-Object 'System.Windows.Forms.Label'
	$rdoSaveHKLM = New-Object 'System.Windows.Forms.RadioButton'
	$rdoSaveHKCU = New-Object 'System.Windows.Forms.RadioButton'
	$btnSave = New-Object 'System.Windows.Forms.Button'
	$btnChangePackageSource = New-Object 'System.Windows.Forms.Button'
	$txtPackageSource = New-Object 'System.Windows.Forms.TextBox'
	$lblPackageDirectory = New-Object 'System.Windows.Forms.Label'
	$btnChangeCatalogFile = New-Object 'System.Windows.Forms.Button'
	$txtCatalogFile = New-Object 'System.Windows.Forms.TextBox'
	$lblCatalogPath = New-Object 'System.Windows.Forms.Label'
	$btnChangeLogFile = New-Object 'System.Windows.Forms.Button'
	$txtLogFile = New-Object 'System.Windows.Forms.TextBox'
	$lblLogFile = New-Object 'System.Windows.Forms.Label'
	$txtSiteCode = New-Object 'System.Windows.Forms.TextBox'
	$lblSCCMSiteCode = New-Object 'System.Windows.Forms.Label'
	$txtServer = New-Object 'System.Windows.Forms.TextBox'
	$lblServer = New-Object 'System.Windows.Forms.Label'
	$txtLicenseKey = New-Object 'System.Windows.Forms.TextBox'
	$lblLicenseKey = New-Object 'System.Windows.Forms.Label'
	$picturebox1 = New-Object 'System.Windows.Forms.PictureBox'
	$folderBrowser = New-Object 'System.Windows.Forms.FolderBrowserDialog'
	$Application = New-Object 'System.Windows.Forms.DataGridViewTextBoxColumn'
	$Path = New-Object 'System.Windows.Forms.DataGridViewTextBoxColumn'
	$Exclude = New-Object 'System.Windows.Forms.DataGridViewCheckBoxColumn'
	$Supersede = New-Object 'System.Windows.Forms.DataGridViewCheckBoxColumn'
	$ActionName = New-Object 'System.Windows.Forms.DataGridViewTextBoxColumn'
	$ScriptPath = New-Object 'System.Windows.Forms.DataGridViewTextBoxColumn'
	$ArgumentName = New-Object 'System.Windows.Forms.DataGridViewTextBoxColumn'
	$fileSave = New-Object 'System.Windows.Forms.SaveFileDialog'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	
	Function Load-Catalog {
		Param (
			[string]$catalogFile
		)
		
		$btnAppBuild.Enabled = $false
		
		try {
			[xml]$catalog = Get-Content $catalogFile
		} Catch {
			#Add-Type -AssemblyName "System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
			[void][System.Windows.Forms.MessageBox]::Show("Unable to load catalog XML.`r`n`r`n$($_.Exception.Message)", "Error", "OK", "Error")
		}
		
		$dvCatalog.Rows.Clear()
		$dvActions.Rows.Clear()
		
		Try {
			ForEach ($app in $catalog.NowDeploy.Applications.Application) {
				$newRow = @($($app.'#text'), $app.Path, $app.Exclude, $app.Supersede)
				$dvCatalog.Rows.Add($newRow)
			}
			
			ForEach ($action in $catalog.NowDeploy.Actions.ChildNodes) {
				$newRow = @($action.Name, $action.Script.File, $action.Script.ArgumentName)
				$dvActions.Rows.Add($newRow)
			}
			
			If ($catalog.NowDeploy.Actions.ChildNodes.Name -notcontains "OnComplete") {
				$dvActions.Rows.Add("OnComplete", $null, $null)
			}
			
			$btnAppBuild.Enabled = $true
			$btnDownloadCatalog.Enabled = $true
			$btnSaveCatalogXML.Enabled = $false
			
		} Catch {
			#Add-Type -AssemblyName "System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
			[void][System.Windows.Forms.MessageBox]::Show("Unable to load catalog XML.`r`n`r`n$($_.Exception.Message)", "Error","OK", "Error")
		}
		
		$dvCatalog.Sort($dvCatalog.columns[0], 'Ascending')
		
	}
	
	$MainForm_Load={
		
		# Gather NowDeploy AppBuild Settings from Registry
		
		$ndUserKeys = Get-ItemProperty "HKCU:\Software\NowDeploy\AppBuilder" -ErrorAction SilentlyContinue
		$ndCompKeys = Get-ItemProperty "HKLM:\Software\NowDeploy\AppBuilder" -ErrorAction SilentlyContinue
		$cmUIKeys = Get-ItemProperty "HKCU:\Software\Microsoft\ConfigMgr10\AdminUI\MRU\1"
		
		# License Key
		
		if ($ndUserKeys.key -and $ndUserKeys.key.Length -ge 5) {
			$txtLicenseKey.Text = $ndUserKeys.key
			$rdoSaveHKCU.Select()
		} elseif ($ndCompKeys.key -and $ndCompKeys.key.Length -ge 5) {
			$txtLicenseKey.Text = $ndCompKeys.key
			$rdoSaveHKLM.Select()
		}
		
		# Package Source
		
		if ($ndUserKeys.packageSource) {
			$txtPackageSource.Text = $ndUserKeys.PackageSource
		} elseif ($ndCompKeys.packageSource) {
			$txtPackageSource.Text = $ndCompKeys.PackageSource
			
		}
		
		# SCCM Server
		
		If ($ndUserKeys.server) {
			$txtServer.Text = $ndUserKeys.Server
		} elseif ($ndCompKeys.server) {
			$txtServer.Text = $ndCompKeys.Server
		} elseif ($cmUIKeys.ServerName) {
			$txtServer.Text =  $cmUIKeys.ServerName
		}
		
		# Site Code
		
		if ($ndUserKeys.SiteCode) {
			$txtSiteCode.Text = $ndUserKeys.SiteCode
		} elseif ($ndCompKeys.Sitecode) {
			$txtSiteCode.Text = $ndCompKeys.Sitecode
		} elseif ($cmUIKeys.SiteCode) {
			$txtSiteCode.Text = $cmUIKeys.SiteCode
		}
		
		# Log File
		
		if ($ndUserKeys.logFileName) {
			$txtLogFile.Text = $ndUserKeys.LogFileName
		} elseif ($ndCompKeys.logFileName) {
			$txtLogFile.Text = $ndCompKeys.LogFilename
		}
		
		# Last Catalog
		
		if ($ndUserKeys.LastCatalog) {
			$txtCatalogFile.Text = $ndUserKeys.LastCatalog
		} elseif ($ndCompKeys.LastCatalog) {
			$txtCatalogFile.Text = $ndCompKeys.LastCatalog
		}
		
		
		$currentPrincipal = New-Object Security.Principal.WindowsPrincipal([Security.Principal.WindowsIdentity]::GetCurrent())
		$administrator = $currentPrincipal.IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)
		
		if (-not ($administrator)) {
			$rdoSaveHKLM.Enabled = $false
			$rdoSaveHKCU.Select()
		}
		
		If ($txtCatalogFile.text -and $(Get-ChildItem $txtCatalogFile.Text -ErrorAction SilentlyContinue)) {
				Load-Catalog $txtCatalogFile.Text
		}
		
		$btnSave.Enabled = $false
		
	}
	
	$buttonCallChildForm_Click={
		#TODO: Place custom script here
		if((Show-ChildForm_psf) -eq 'OK')
		{
			
		}
	}
	
	$txtLicenseKey_MouseHover={
		# Unhide the License Key
		$txtLicenseKey.PasswordChar = $null
	}
	
	$txtLicenseKey_MouseLeave={
		# Hide the License Key
		$txtLicenseKey.PasswordChar = "*"
	}
	
	
	$btnChangePackageSource_Click={
		# Select New Package Source
		$newFolder = $folderBrowser.ShowDialog()
		
		if ($newFolder -eq [System.Windows.Forms.DialogResult]::OK) {
			$txtPackageSource.Text = $folderBrowser.SelectedPath
		}
	}
	
	$btnSave_Click={
		# Save Settings to Registry
		
		If ($rdoSaveHKCU.Checked) {
			$rootKey = "HKCU:\Software\NowDeploy\AppBuilder"
		} else {
			$rootKey = "HKLM:\Software\NowDeploy\AppBuilder"
		}
		
		Try {
			New-ItemProperty -Path $rootKey -Name "PackageSource" -Value $txtPackageSource.text -Force
			New-ItemProperty -Path $rootKey -Name "Key" -Value $txtLicenseKey.Text -Force
			New-ItemProperty -Path $rootKey -Name "Server" -Value $txtServer.Text -Force
			New-ItemProperty -Path $rootKey -Name "SiteCode" -Value $txtSiteCode.Text -Force
			New-ItemProperty -Path $rootKey -Name "LogFileName" -Value $txtLogFile.Text -Force
			New-ItemProperty -Path $rootKey -Name "LastCatalog" -Value $txtCatalogFile.Text -Force
			#Add-Type -AssemblyName "System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
			[void][System.Windows.Forms.MessageBox]::Show("Settings Saved to Registry", "Success","OK","Information")
			$btnSave.Enabled = $false
		} Catch {
			#Add-Type -AssemblyName "System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
			[void][System.Windows.Forms.MessageBox]::Show("Failed to write one or more registry values.`r`n`r`n$($_.Exception.Message)", "Error", "OK", "Error")
		}
		
	}
	
	#region Control Helper Functions
	function Update-ListBox
	{
	<#
		.SYNOPSIS
			This functions helps you load items into a ListBox or CheckedListBox.
		
		.DESCRIPTION
			Use this function to dynamically load items into the ListBox control.
		
		.PARAMETER ListBox
			The ListBox control you want to add items to.
		
		.PARAMETER Items
			The object or objects you wish to load into the ListBox's Items collection.
		
		.PARAMETER DisplayMember
			Indicates the property to display for the items in this control.
			
		.PARAMETER ValueMember
			Indicates the property to use for the value of the control.
		
		.PARAMETER Append
			Adds the item(s) to the ListBox without clearing the Items collection.
		
		.EXAMPLE
			Update-ListBox $ListBox1 "Red", "White", "Blue"
		
		.EXAMPLE
			Update-ListBox $listBox1 "Red" -Append
			Update-ListBox $listBox1 "White" -Append
			Update-ListBox $listBox1 "Blue" -Append
		
		.EXAMPLE
			Update-ListBox $listBox1 (Get-Process) "ProcessName"
		
		.NOTES
			Additional information about the function.
	#>
		
		param
		(
			[Parameter(Mandatory = $true)]
			[ValidateNotNull()]
			[System.Windows.Forms.ListBox]
			$ListBox,
			[Parameter(Mandatory = $true)]
			[ValidateNotNull()]
			$Items,
			[Parameter(Mandatory = $false)]
			[string]$DisplayMember,
			[Parameter(Mandatory = $false)]
			[string]$ValueMember,
			[switch]
			$Append
		)
		
		if (-not $Append)
		{
			$ListBox.Items.Clear()
		}
		
		if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection] -or $Items -is [System.Collections.ICollection])
		{
			$ListBox.Items.AddRange($Items)
		}
		elseif ($Items -is [System.Collections.IEnumerable])
		{
			$ListBox.BeginUpdate()
			foreach ($obj in $Items)
			{
				$ListBox.Items.Add($obj)
			}
			$ListBox.EndUpdate()
		}
		else
		{
			$ListBox.Items.Add($Items)
		}
		
		$ListBox.DisplayMember = $DisplayMember
		$ListBox.ValueMember = $ValueMember
	}
	
	function Update-DataGridView
	{
		<#
		.SYNOPSIS
			This functions helps you load items into a DataGridView.
	
		.DESCRIPTION
			Use this function to dynamically load items into the DataGridView control.
	
		.PARAMETER  DataGridView
			The DataGridView control you want to add items to.
	
		.PARAMETER  Item
			The object or objects you wish to load into the DataGridView's items collection.
		
		.PARAMETER  DataMember
			Sets the name of the list or table in the data source for which the DataGridView is displaying data.
	
		.PARAMETER AutoSizeColumns
		    Resizes DataGridView control's columns after loading the items.
		#>
		Param (
			[ValidateNotNull()]
			[Parameter(Mandatory=$true)]
			[System.Windows.Forms.DataGridView]$DataGridView,
			[ValidateNotNull()]
			[Parameter(Mandatory=$true)]
			$Item,
		    [Parameter(Mandatory=$false)]
			[string]$DataMember,
			[System.Windows.Forms.DataGridViewAutoSizeColumnsMode]$AutoSizeColumns = 'None'
		)
		$DataGridView.SuspendLayout()
		$DataGridView.DataMember = $DataMember
		
		if ($null -eq $Item)
		{
			$DataGridView.DataSource = $null
		}
		elseif ($Item -is [System.Data.DataSet] -and $Item.Tables.Count -gt 0)
		{
			$DataGridView.DataSource = $Item.Tables[0]
		}
		elseif ($Item -is [System.ComponentModel.IListSource]`
		-or $Item -is [System.ComponentModel.IBindingList] -or $Item -is [System.ComponentModel.IBindingListView] )
		{
			$DataGridView.DataSource = $Item
		}
		else
		{
			$array = New-Object System.Collections.ArrayList
			
			if ($Item -is [System.Collections.IList])
			{
				$array.AddRange($Item)
			}
			else
			{
				$array.Add($Item)
			}
			$DataGridView.DataSource = $array
		}
		
		if ($AutoSizeColumns -ne 'None')
		{
			$DataGridView.AutoResizeColumns($AutoSizeColumns)
		}
		
		$DataGridView.ResumeLayout()
	}
	
	function ConvertTo-DataTable
	{
		<#
			.SYNOPSIS
				Converts objects into a DataTable.
		
			.DESCRIPTION
				Converts objects into a DataTable, which are used for DataBinding.
		
			.PARAMETER  InputObject
				The input to convert into a DataTable.
		
			.PARAMETER  Table
				The DataTable you wish to load the input into.
		
			.PARAMETER RetainColumns
				This switch tells the function to keep the DataTable's existing columns.
			
			.PARAMETER FilterWMIProperties
				This switch removes WMI properties that start with an underline.
		
			.EXAMPLE
				$DataTable = ConvertTo-DataTable -InputObject (Get-Process)
		#>
		[OutputType([System.Data.DataTable])]
		param(
		$InputObject, 
		[ValidateNotNull()]
		[System.Data.DataTable]$Table,
		[switch]$RetainColumns,
		[switch]$FilterWMIProperties)
		
		if($null -eq $Table)
		{
			$Table = New-Object System.Data.DataTable
		}
		
		if ($null -eq $InputObject)
		{
			$Table.Clear()
			return @( ,$Table)
		}
		
		if ($InputObject -is [System.Data.DataTable])
		{
			$Table = $InputObject
		}
		elseif ($InputObject -is [System.Data.DataSet] -and $InputObject.Tables.Count -gt 0)
		{
			$Table = $InputObject.Tables[0]
		}
		else
		{
			if (-not $RetainColumns -or $Table.Columns.Count -eq 0)
			{
				#Clear out the Table Contents
				$Table.Clear()
				
				if ($null -eq $InputObject) { return } #Empty Data
				
				$object = $null
				#find the first non null value
				foreach ($item in $InputObject)
				{
					if ($null -ne $item)
					{
						$object = $item
						break
					}
				}
				
				if ($null -eq $object) { return } #All null then empty
				
				#Get all the properties in order to create the columns
				foreach ($prop in $object.PSObject.Get_Properties())
				{
					if (-not $FilterWMIProperties -or -not $prop.Name.StartsWith('__')) #filter out WMI properties
					{
						#Get the type from the Definition string
						$type = $null
						
						if ($null -ne $prop.Value)
						{
							try { $type = $prop.Value.GetType() }
							catch { Out-Null }
						}
						
						if ($null -ne $type) # -and [System.Type]::GetTypeCode($type) -ne 'Object')
						{
							[void]$table.Columns.Add($prop.Name, $type)
						}
						else #Type info not found
						{
							[void]$table.Columns.Add($prop.Name)
						}
					}
				}
				
				if ($object -is [System.Data.DataRow])
				{
					foreach ($item in $InputObject)
					{
						$Table.Rows.Add($item)
					}
					return @( ,$Table)
				}
			}
			else
			{
				$Table.Rows.Clear()
			}
			
			foreach ($item in $InputObject)
			{
				$row = $table.NewRow()
				
				if ($item)
				{
					foreach ($prop in $item.PSObject.Get_Properties())
					{
						if ($table.Columns.Contains($prop.Name))
						{
							$row.Item($prop.Name) = $prop.Value
						}
					}
				}
				[void]$table.Rows.Add($row)
			}
		}
		
		return @(,$Table)
	}
	#endregion
	
	$btnLoadCatalog_Click={
		If (Get-ChildItem $txtCatalogFile.Text -ErrorAction SilentlyContinue) {
			Load-Catalog $txtCatalogFile.Text
		} else {
			#Add-Type -AssemblyName "System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
			[void][System.Windows.Forms.MessageBox]::Show("Please specify a valid path to the catalog file.", "Error", "OK", "Error")
		}
	}
	
	$dvCatalog_CellEndEdit=[System.Windows.Forms.DataGridViewCellEventHandler]{
	#Event Argument: $_ = [System.Windows.Forms.DataGridViewCellEventArgs]
		
		$btnDownloadCatalog.Enabled = $false
		$btnAppBuild.Enabled = $false
		$btnSaveCatalogXML.Enabled = $true
	}
	
	$btnSaveCatalogXML_Click= {
		
		# Load catalog into variable
		
		If (Get-ChildItem $txtCatalogFile.Text -ErrorAction SilentlyContinue) {
			Try {
				[xml]$catalog = Get-Content $txtCatalogFile.Text
			} Catch {
				#Add-Type -AssemblyName "System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
				[void][System.Windows.Forms.MessageBox]::Show("Unable to parse catalog file.`r`n$($_.Exception.Message)", "Error", "OK", "Error")
				Return
			}
		} else {
			#Add-Type -AssemblyName "System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
			[void][System.Windows.Forms.MessageBox]::Show("Please specify a valid path to the catalog file.", "Error", "OK", "Error")
			Return
		}
		
		foreach ($row in $dvCatalog.Rows) {
			$appName = $row.cells[0].Value.ToString()
			$appPath = $row.cells[1].Value.ToString()
			$appExclude = $row.cells[2].Value.ToString()
			$appSupersede = $row.cells[3].Value.ToString()
			
			($catalog.NowDeploy.Applications.Application | Where-Object { $_.'#text' -eq $appName }).Path = $appPath
			($catalog.NowDeploy.Applications.Application | Where-Object { $_.'#text' -eq $appName }).Exclude = $appExclude
			($catalog.NowDeploy.Applications.Application | Where-Object { $_.'#text' -eq $appName }).Supersede = $appSupersede
		}
		
		ForEach ($row in $dvActions.Rows) {
			$actionName = $row.cells[0].Value.ToString()
			$actionScript = $row.cells[1].Value.ToString()
			$actionParam = $row.cells[2].Value.ToString()
			
			$catalog.NowDeploy.Actions[$actionName].script.file = $actionScript
			$catalog.NowDeploy.Actions[$actionName].script.argumentName = $actionParam
		}
		
		
		Try {
			$catalog.Save($txtCatalogFile.Text)
		} Catch {
			#Add-Type -AssemblyName "System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
			[void][System.Windows.Forms.MessageBox]::Show("Unable to save catalog file.", "Error", "OK", "Error")
		}
		
		$dvCatalog.Rows.Clear()
		$dvActions.Rows.Clear()
		
		Load-Catalog $txtCatalogFile.Text
		
		$btnDownloadCatalog.Enabled = $true
		$btnAppBuild.Enabled = $true
		$btnSaveCatalogXML.Enabled = $false
		
	}
	
	$txtLicenseKey_TextChanged={
		$btnSave.Enabled = $true
	}
	
	$txtServer_TextChanged={
		$btnSave.Enabled = $true
	}
	
	$txtSiteCode_TextChanged={
		$btnSave.Enabled = $true
	}
	
	$txtPackageSource_TextChanged={
		$btnSave.Enabled = $true
	}
	
	$txtLogFile_TextChanged={
		$btnSave.Enabled = $true
	}
	
	$txtCatalogFile_TextChanged={
		$btnSave.Enabled = $true
		$dvActions.Rows.Clear()
		$dvCatalog.Rows.Clear()
	}
	
	
	$btnChangeLogFile_Click={
		$newFile = $fileSave.ShowDialog()
		If ($newFile -eq [System.Windows.Forms.DialogResult]::OK) {
			$txtLogFile.Text = $fileSave.FileName
		}
	}
	
	$btnChangeCatalogFile_Click={
		$newFile = $fileSave.ShowDialog()
		If ($newFile -eq [System.Windows.Forms.DialogResult]::OK) {
			$txtCatalogFile.Text = $fileSave.FileName
		}
	}
	
	
	$dvCatalog_CellValueChanged=[System.Windows.Forms.DataGridViewCellEventHandler]{
	#Event Argument: $_ = [System.Windows.Forms.DataGridViewCellEventArgs]
		#TODO: Place custom script here
		$btnDownloadCatalog.Enabled = $false
		$btnAppBuild.Enabled = $false
		$btnSaveCatalogXML.Enabled = $true
		
	}
	
	$dvActions_CellValueChanged=[System.Windows.Forms.DataGridViewCellEventHandler]{
	#Event Argument: $_ = [System.Windows.Forms.DataGridViewCellEventArgs]
		#TODO: Place custom script here
		$btnDownloadCatalog.Enabled = $false
		$btnAppBuild.Enabled = $false
		$btnSaveCatalogXML.Enabled = $true
		
	}
	
	$btnDownloadCatalog_Click={
		
		$catalogMgr = Join-Path $global:ScriptDirectory -ChildPath "CatalogMgr.exe"
		
		If (-not (Get-ChildItem $catalogMgr -ErrorAction SilentlyContinue)) {
			#Add-Type -AssemblyName "System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
			[void][System.Windows.Forms.MessageBox]::Show("Cannot find $catalogMgr.  Please ensure the file is placed into the same directory as this script.", "Error", "OK", "Error") 
			Return
		}
		
		$cmdArgs = "-key $($txtLicenseKey.Text) -Catalog `"$($txtCatalogFile.Text)`""
		
		#Add-Type -AssemblyName "System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
		$continue = [System.Windows.Forms.MessageBox]::Show("Execute the following command?`r`n`r`nCatalogMgr.exe $cmdArgs", "Permission to Execute","YesNo","Question")
		
		If ($continue -eq [System.Windows.Forms.DialogResult]::Yes) {
			Start-Process -FilePath $catalogMgr -ArgumentList $cmdArgs -Wait
			Load-Catalog $txtCatalogFile.Text
		}
	}
	
	$btnAppBuild_Click={
		
		$appBuild = Join-Path $global:ScriptDirectory -ChildPath "AppBuild.exe"
		
		If (-not (Get-ChildItem $appBuild -ErrorAction SilentlyContinue)) {
			#Add-Type -AssemblyName "System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
			[void][System.Windows.Forms.MessageBox]::Show("Cannot find $appBuild.  Please ensure the file is placed into the same directory as this script.", "Error", "OK", "Error")
			Return
		}
		
		$cmdArgs = "-key $($txtLicenseKey.Text) -catalog `"$($txtCatalogFile.Text)`" -Server `"$($txtServer.Text)`" -SiteCode `"$($txtSiteCode.Text)`" -PackageSource `"$($txtPackageSource.Text)`" -LogFileName `"$($txtLogFile.Text)`""
		
		#Add-Type -AssemblyName "System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
		$continue = [System.Windows.Forms.MessageBox]::Show("Execute the following command?`r`n`r`nCatalogMgr.exe $cmdArgs", "Permission to Execute", "YesNo", "Question")
		
		If ($continue -eq [System.Windows.Forms.DialogResult]::Yes) {
			Start-Process -FilePath $appBuild -ArgumentList $cmdArgs
		}
		
	}
	
	# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$MainForm.WindowState = $InitialFormWindowState
	}
	
	$Form_StoreValues_Closing=
	{
		#Store the control values
		$script:MainForm_dvActions = $dvActions.SelectedCells
		if ($dvActions.SelectionMode -eq 'FullRowSelect')
		{ $script:MainForm_dvActions_SelectedObjects = $dvActions.SelectedRows | Select-Object -ExpandProperty DataBoundItem }
		else { $script:MainForm_dvActions_SelectedObjects = $dvActions.SelectedCells | Select-Object -ExpandProperty RowIndex -Unique | ForEach-Object { if ($_ -ne -1) { $dvActions.Rows[$_].DataBoundItem } } }
		$script:MainForm_dvCatalog = $dvCatalog.SelectedCells
		if ($dvCatalog.SelectionMode -eq 'FullRowSelect')
		{ $script:MainForm_dvCatalog_SelectedObjects = $dvCatalog.SelectedRows | Select-Object -ExpandProperty DataBoundItem }
		else { $script:MainForm_dvCatalog_SelectedObjects = $dvCatalog.SelectedCells | Select-Object -ExpandProperty RowIndex -Unique | ForEach-Object { if ($_ -ne -1) { $dvCatalog.Rows[$_].DataBoundItem } } }
		$script:MainForm_rdoSaveHKLM = $rdoSaveHKLM.Checked
		$script:MainForm_rdoSaveHKCU = $rdoSaveHKCU.Checked
		$script:MainForm_txtPackageSource = $txtPackageSource.Text
		$script:MainForm_txtCatalogFile = $txtCatalogFile.Text
		$script:MainForm_txtLogFile = $txtLogFile.Text
		$script:MainForm_txtSiteCode = $txtSiteCode.Text
		$script:MainForm_txtServer = $txtServer.Text
		$script:MainForm_txtLicenseKey = $txtLicenseKey.Text
	}

	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$btnSaveCatalogXML.remove_Click($btnSaveCatalogXML_Click)
			$btnAppBuild.remove_Click($btnAppBuild_Click)
			$btnDownloadCatalog.remove_Click($btnDownloadCatalog_Click)
			$dvActions.remove_CellValueChanged($dvActions_CellValueChanged)
			$dvCatalog.remove_CellValueChanged($dvCatalog_CellValueChanged)
			$btnLoadCatalog.remove_Click($btnLoadCatalog_Click)
			$btnSave.remove_Click($btnSave_Click)
			$btnChangePackageSource.remove_Click($btnChangePackageSource_Click)
			$txtPackageSource.remove_TextChanged($txtPackageSource_TextChanged)
			$btnChangeCatalogFile.remove_Click($btnChangeCatalogFile_Click)
			$txtCatalogFile.remove_TextChanged($txtCatalogFile_TextChanged)
			$btnChangeLogFile.remove_Click($btnChangeLogFile_Click)
			$txtLogFile.remove_TextChanged($txtLogFile_TextChanged)
			$txtSiteCode.remove_TextChanged($txtSiteCode_TextChanged)
			$txtServer.remove_TextChanged($txtServer_TextChanged)
			$txtLicenseKey.remove_TextChanged($txtLicenseKey_TextChanged)
			$txtLicenseKey.remove_MouseLeave($txtLicenseKey_MouseLeave)
			$txtLicenseKey.remove_MouseHover($txtLicenseKey_MouseHover)
			$MainForm.remove_Load($MainForm_Load)
			$MainForm.remove_Load($Form_StateCorrection_Load)
			$MainForm.remove_Closing($Form_StoreValues_Closing)
			$MainForm.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch { Out-Null <# Prevent PSScriptAnalyzer warning #> }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$MainForm.SuspendLayout()
	$grpActions.SuspendLayout()
	$grpSettings.SuspendLayout()
	#
	# MainForm
	#
	$MainForm.Controls.Add($btnSaveCatalogXML)
	$MainForm.Controls.Add($grpActions)
	$MainForm.Controls.Add($lblApplicationList)
	$MainForm.Controls.Add($labelCatalogActionsList)
	$MainForm.Controls.Add($dvActions)
	$MainForm.Controls.Add($dvCatalog)
	$MainForm.Controls.Add($grpSettings)
	$MainForm.Controls.Add($picturebox1)
	$MainForm.AutoScaleDimensions = '7, 15'
	$MainForm.AutoScaleMode = 'Font'
	$MainForm.BackColor = 'White'
	$MainForm.ClientSize = '1108, 514'
	$MainForm.Font = 'Calibri, 9.75pt'
	$MainForm.FormBorderStyle = 'FixedSingle'
	$MainForm.Margin = '5, 5, 5, 5'
	$MainForm.MaximizeBox = $False
	$MainForm.Name = 'MainForm'
	$MainForm.StartPosition = 'CenterScreen'
	$MainForm.Text = 'NowDeploy for Configuration Manager'
	$MainForm.add_Load($MainForm_Load)
	#
	# btnSaveCatalogXML
	#
	$btnSaveCatalogXML.Enabled = $False
	$btnSaveCatalogXML.Location = '534, 424'
	$btnSaveCatalogXML.Margin = '4, 3, 4, 3'
	$btnSaveCatalogXML.Name = 'btnSaveCatalogXML'
	$btnSaveCatalogXML.Size = '135, 27'
	$btnSaveCatalogXML.TabIndex = 23
	$btnSaveCatalogXML.Text = 'Update Catalog XML'
	$btnSaveCatalogXML.UseCompatibleTextRendering = $True
	$btnSaveCatalogXML.UseVisualStyleBackColor = $True
	$btnSaveCatalogXML.add_Click($btnSaveCatalogXML_Click)
	#
	# grpActions
	#
	$grpActions.Controls.Add($btnAppBuild)
	$grpActions.Controls.Add($btnDownloadCatalog)
	$grpActions.Location = '483, 9'
	$grpActions.Margin = '4, 3, 4, 3'
	$grpActions.Name = 'grpActions'
	$grpActions.Padding = '4, 3, 4, 3'
	$grpActions.Size = '186, 93'
	$grpActions.TabIndex = 22
	$grpActions.TabStop = $False
	$grpActions.Text = 'Actions'
	$grpActions.UseCompatibleTextRendering = $True
	#
	# btnAppBuild
	#
	$btnAppBuild.Enabled = $False
	$btnAppBuild.Location = '8, 56'
	$btnAppBuild.Margin = '4, 3, 4, 3'
	$btnAppBuild.Name = 'btnAppBuild'
	$btnAppBuild.Size = '167, 27'
	$btnAppBuild.TabIndex = 1
	$btnAppBuild.Text = 'Load into ConfigMgr'
	$btnAppBuild.UseCompatibleTextRendering = $True
	$btnAppBuild.UseVisualStyleBackColor = $True
	$btnAppBuild.add_Click($btnAppBuild_Click)
	#
	# btnDownloadCatalog
	#
	$btnDownloadCatalog.Location = '8, 23'
	$btnDownloadCatalog.Margin = '4, 3, 4, 3'
	$btnDownloadCatalog.Name = 'btnDownloadCatalog'
	$btnDownloadCatalog.Size = '167, 27'
	$btnDownloadCatalog.TabIndex = 0
	$btnDownloadCatalog.Text = 'Download/Update Catalog'
	$btnDownloadCatalog.UseCompatibleTextRendering = $True
	$btnDownloadCatalog.UseVisualStyleBackColor = $True
	$btnDownloadCatalog.add_Click($btnDownloadCatalog_Click)
	#
	# lblApplicationList
	#
	$lblApplicationList.AutoSize = $True
	$lblApplicationList.Font = 'Calibri, 11pt'
	$lblApplicationList.Location = '13, 99'
	$lblApplicationList.Margin = '4, 0, 4, 0'
	$lblApplicationList.Name = 'lblApplicationList'
	$lblApplicationList.Size = '153, 23'
	$lblApplicationList.TabIndex = 19
	$lblApplicationList.Text = 'Catalog Application List:'
	$lblApplicationList.UseCompatibleTextRendering = $True
	#
	# labelCatalogActionsList
	#
	$labelCatalogActionsList.AutoSize = $True
	$labelCatalogActionsList.Font = 'Calibri, 11.25pt'
	$labelCatalogActionsList.Location = '13, 317'
	$labelCatalogActionsList.Margin = '4, 0, 4, 0'
	$labelCatalogActionsList.Name = 'labelCatalogActionsList'
	$labelCatalogActionsList.Size = '132, 24'
	$labelCatalogActionsList.TabIndex = 20
	$labelCatalogActionsList.Text = 'Catalog Actions List:'
	$labelCatalogActionsList.UseCompatibleTextRendering = $True
	#
	# dvActions
	#
	$dvActions.AllowUserToAddRows = $False
	$dvActions.AllowUserToDeleteRows = $False
	$dvActions.ColumnHeadersHeightSizeMode = 'AutoSize'
	[void]$dvActions.Columns.Add($ActionName)
	[void]$dvActions.Columns.Add($ScriptPath)
	[void]$dvActions.Columns.Add($ArgumentName)
	$dvActions.Location = '13, 344'
	$dvActions.Margin = '4, 3, 4, 3'
	$dvActions.Name = 'dvActions'
	$dvActions.Size = '656, 74'
	$dvActions.TabIndex = 2
	$dvActions.add_CellValueChanged($dvActions_CellValueChanged)
	#
	# dvCatalog
	#
	$dvCatalog.AllowUserToAddRows = $False
	$dvCatalog.AllowUserToDeleteRows = $False
	$dvCatalog.AllowUserToOrderColumns = $True
	$dvCatalog.AutoSizeColumnsMode = 'DisplayedCells'
	[void]$dvCatalog.Columns.Add($Application)
	[void]$dvCatalog.Columns.Add($Path)
	[void]$dvCatalog.Columns.Add($Exclude)
	[void]$dvCatalog.Columns.Add($Supersede)
	$dvCatalog.Location = '13, 124'
	$dvCatalog.Margin = '4, 3, 4, 3'
	$dvCatalog.Name = 'dvCatalog'
	$dvCatalog.ScrollBars = 'Vertical'
	$dvCatalog.Size = '656, 187'
	$dvCatalog.TabIndex = 1
	$dvCatalog.add_CellValueChanged($dvCatalog_CellValueChanged)
	#
	# grpSettings
	#
	$grpSettings.Controls.Add($btnLoadCatalog)
	$grpSettings.Controls.Add($horizonalLine1)
	$grpSettings.Controls.Add($rdoSaveHKLM)
	$grpSettings.Controls.Add($rdoSaveHKCU)
	$grpSettings.Controls.Add($btnSave)
	$grpSettings.Controls.Add($btnChangePackageSource)
	$grpSettings.Controls.Add($txtPackageSource)
	$grpSettings.Controls.Add($lblPackageDirectory)
	$grpSettings.Controls.Add($btnChangeCatalogFile)
	$grpSettings.Controls.Add($txtCatalogFile)
	$grpSettings.Controls.Add($lblCatalogPath)
	$grpSettings.Controls.Add($btnChangeLogFile)
	$grpSettings.Controls.Add($txtLogFile)
	$grpSettings.Controls.Add($lblLogFile)
	$grpSettings.Controls.Add($txtSiteCode)
	$grpSettings.Controls.Add($lblSCCMSiteCode)
	$grpSettings.Controls.Add($txtServer)
	$grpSettings.Controls.Add($lblServer)
	$grpSettings.Controls.Add($txtLicenseKey)
	$grpSettings.Controls.Add($lblLicenseKey)
	$grpSettings.Font = 'Calibri, 9.75pt'
	$grpSettings.Location = '677, 9'
	$grpSettings.Margin = '4, 3, 4, 3'
	$grpSettings.Name = 'grpSettings'
	$grpSettings.Padding = '4, 3, 4, 3'
	$grpSettings.Size = '418, 410'
	$grpSettings.TabIndex = 2
	$grpSettings.TabStop = $False
	$grpSettings.Text = 'Configuration'
	$grpSettings.UseCompatibleTextRendering = $True
	#
	# btnLoadCatalog
	#
	$btnLoadCatalog.BackColor = 'Orange'
	#region Binary Data
	$btnLoadCatalog.Image = [System.Convert]::FromBase64String('
iVBORw0KGgoAAAANSUhEUgAAABsAAAAcCAYAAACQ0cTtAAABgmlDQ1BJQ0MgcHJvZmlsZQAAKM+V
kU0oRFEcxX8ziESUWSCLt8CKEsJSQ6QozYyawcJ7b8xQ895M741sLJWtsvCx8bWwsWZrYauU8lGy
sbUiNtLzv2/UTGqUW7f769x7TveeC8GDjGm5lT1g2XknMh7W4olZrfqZGlpopI9B3XRzU9GxGGXH
xy0Btd50qyz+N+qTi64JAU142Mw5eeEF4YHVfE7xjnDIXNKTwqfCXY5cUPhe6UaBXxSnfQ6qzJAT
i4wIh4S1dAkbJWwuOZZwv3B70rIlPxgvcFLxmmIrs2L+3FO9sG7RnokqXWYb40wwxTQaBisskyFP
t6y2KC4R2Q+X8bf6/mlxGeJaxhTHKFksdN+P+oPf3bqpvt5CUl0Yqp48760Dqrfga9PzPg897+sI
Kh7hwi76swcw9C76ZlFr34eGdTi7LGrGNpxvQPNDTnd0X6qQGUyl4PVEvikBTddQO1fo7Wef4zuI
SVeTV7C7B51pyZ4v8+6a0t7+POP3R/gbCuNy5N9mZpIAAAAJcEhZcwAALiIAAC4iAari3ZIAAAAH
dElNRQfjCBkQNCdDY3W0AAABxklEQVRIS71WPYvCQBDV8oq7X2R/hT/BXnv/gEoQLKLYiPbKFYIi
2KZIOrU8sFKwE20UDi1UjrmZdTbEzXr5kjx4iLPz3sN1M9lMECqVynu1Wi0gv5DfyF8k8Cd9p3qB
+lgSHbVa7QNNTOQPksyDSH0m6dgiHFDwicKtxygKt6Rnq/+BzSVFHJclttQDG4qKICmLbP0IXMgh
5Z//KpJfjiPuwD1+w+LK0/RKrsifo8SvKisNLofDIfT7fe1aBJZlUBa58yy47HQ6cD6fYTqd+tYi
kvyzFJb3FF3W63XY7/dAWK/XYNs2OI4TitTbbrdVzzyFtZSi4HK5FEFxMRgMVM8Whc2UIliWxZL4
0ITNKOzgLdJhuN1uLIkPTdiBwtxCs9mE0+nE7cmgCYOHsG63C5fLhduTQfe4+LZxPB5zezJowsQ2
+g7IfD5nSXxowsQB0R79zWbDsnjQhImjr32oG40GHI9HIVwsFmKKRKFpmqpnnobw03HV6/Xger3C
aDTyrUXkjnLkfHw6iCeTySvC7oOYEPSKMQxDWw/Jx1cMAYvpvDwlcCGda4EENqRz4ZHAPU7nKieB
gnQuqV6gQajrNzLg+p3J/AEJn/VOUfXRQgAAAABJRU5ErkJggg==')
	#endregion
	$btnLoadCatalog.Location = '338, 359'
	$btnLoadCatalog.Margin = '4, 3, 4, 3'
	$btnLoadCatalog.Name = 'btnLoadCatalog'
	$btnLoadCatalog.Size = '34, 33'
	$btnLoadCatalog.TabIndex = 21
	$btnLoadCatalog.UseCompatibleTextRendering = $True
	$btnLoadCatalog.UseVisualStyleBackColor = $False
	$btnLoadCatalog.add_Click($btnLoadCatalog_Click)
	#
	# horizonalLine1
	#
	$horizonalLine1.BorderStyle = 'Fixed3D'
	$horizonalLine1.Location = '8, 67'
	$horizonalLine1.Margin = '4, 0, 4, 0'
	$horizonalLine1.Name = 'horizonalLine1'
	$horizonalLine1.Size = '396, 2'
	$horizonalLine1.TabIndex = 20
	$horizonalLine1.UseCompatibleTextRendering = $True
	#
	# rdoSaveHKLM
	#
	$rdoSaveHKLM.Location = '179, 22'
	$rdoSaveHKLM.Margin = '4, 3, 4, 3'
	$rdoSaveHKLM.Name = 'rdoSaveHKLM'
	$rdoSaveHKLM.Size = '61, 28'
	$rdoSaveHKLM.TabIndex = 3
	$rdoSaveHKLM.Text = 'HKLM'
	$rdoSaveHKLM.UseCompatibleTextRendering = $True
	$rdoSaveHKLM.UseVisualStyleBackColor = $True
	#
	# rdoSaveHKCU
	#
	$rdoSaveHKCU.Checked = $True
	$rdoSaveHKCU.Location = '248, 22'
	$rdoSaveHKCU.Margin = '4, 3, 4, 3'
	$rdoSaveHKCU.Name = 'rdoSaveHKCU'
	$rdoSaveHKCU.Size = '61, 28'
	$rdoSaveHKCU.TabIndex = 4
	$rdoSaveHKCU.TabStop = $True
	$rdoSaveHKCU.Text = 'HKCU'
	$rdoSaveHKCU.UseCompatibleTextRendering = $True
	$rdoSaveHKCU.UseVisualStyleBackColor = $True
	#
	# btnSave
	#
	$btnSave.Enabled = $False
	$btnSave.Location = '316, 23'
	$btnSave.Margin = '4, 3, 4, 3'
	$btnSave.Name = 'btnSave'
	$btnSave.Size = '88, 27'
	$btnSave.TabIndex = 5
	$btnSave.Text = 'Save Changes'
	$btnSave.UseCompatibleTextRendering = $True
	$btnSave.UseVisualStyleBackColor = $True
	$btnSave.add_Click($btnSave_Click)
	#
	# btnChangePackageSource
	#
	$btnChangePackageSource.BackColor = 'Orange'
	#region Binary Data
	$btnChangePackageSource.Image = [System.Convert]::FromBase64String('
iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAABg2lDQ1BJQ0MgcHJvZmlsZQAAKM+V
kTlIA0EYhT8TRRGPwhRBLLaIVgqiIpYSxSAYkCSCV+HuxkQhu4bdiI2lYBuw8Gi8ChtrbS1sBUHw
ALGxtVK0EVn/2QgJQgQHhvl4M+8x8wYCBznTcmt7wbILTiIW1aZnZrX6ZxoI00w/Lbrp5uPJsRRV
x8ctNWq96VFZ/G80pxddE2o04WEz7xSEF4QH1wp5xTvCIXNJTwufCnc7ckHhe6UbJX5RnPU5oDJD
TioxIhwS1rIVbFSwueRYwgPCkbRlS35gusRpxeuKrdyq+XNP9cKmRXsqqXSZHcQYJ84kGgarLJOj
QI+stiguCdmPVvG3+/5JcRniWsYUxygrWOi+H/UHv7t1M/19paSmKNQ9ed5bJ9RvwVfR8z4PPe/r
CIKPcGGX/SsHMPQuerGsRfahdQPOLsuasQ3nmxB+yOuO7ktBmYFMBl5P5JtmoO0aGudKvf3sc3wH
Kelq4gp296ArK9nzVd7dUNnbn2f8/oh+A5rJcrc/aCVFAAAACXBIWXMAAA3SAAAN0gFvkv6OAAAA
B3RJTUUH4wgYDTQRIJu3awAAApZJREFUSEvtlMtOWkEYx6e7bvsAbZM+QZ/BbRdNF13UF+gLuGlM
6IZEEBRJkKAoV7kJiiBKIGHRhJBY71wWLBTlToBFV+Kifp3/9Aw5pbYhlqRJ05P8MufMOfP7vvlm
zrB/59LpdM/29vZauVxucHBwMDg8PBwcHx/fnpyc3PL2xuFwaJVPH3bNz8+/q9Vq1Gq1qNPpULfb
pX6/T71eT9xns9nO3Nzci3FYWFh4SkSPFDVj6MhkMjeNRoOazSa1220RRIKgl5eXVCwWBfl8ns7P
z+ns7IxOT0+Jz5L4LOno6Ij4zIlXgPiM7YpelOdVuVymarVK9XqdEEgN+jC76+trqlQqItjFxcUv
wftYLFZS9N8DlEolurq6EkCkBn3jiCX4bnt7u6joGdNoNK8xvUKhMBFQxq2trYKiZ2x2dvYN3z3D
Ov4JcGBNNjc380JutVo/8GgDPiXa2dlB7Sgej//E7u6uaPE+Go0KwuEwhUIhCgaD5Pf7aWNjgzwe
D7ndbiwymc1mL7PZbPFkMkn7+/uENpVKUTqdFq3sTyQSQo4EIOYJ3Sv3er1C7nQ6RQCLxVJkS0tL
NggA/9GEEOAefTLzUTkvwVDu8/mGcpfLJeRra2vE3Z+Z0WjU3FcaPAO1OBKJ/DZztdxut5PJZPqE
LfoeAyHAOkjwrJYiY4gDgcAPWaPmEKMs6+vrQzlYXFxM4oh4iwEQqIFMZqqWyozVYnXWaniAMONn
xxQ+hEACkUQtlGWQ0tGMR+EBXJjBSzxAIIFIIoXjStXw9bUwrVb7fHl5WQwaHbi6uipYWVl5EHq9
Xsemp6ef8O1E/IfDvp0ISBg+fgR9xM/8mK9Dlh/ZXzl3k4DX/s5gMHyZmZmZEsfF/+svXox9A2WL
rqJ6AIv8AAAAAElFTkSuQmCC')
	#endregion
	$btnChangePackageSource.Location = '376, 229'
	$btnChangePackageSource.Margin = '4, 3, 4, 3'
	$btnChangePackageSource.Name = 'btnChangePackageSource'
	$btnChangePackageSource.Size = '34, 33'
	$btnChangePackageSource.TabIndex = 10
	$btnChangePackageSource.UseCompatibleTextRendering = $True
	$btnChangePackageSource.UseVisualStyleBackColor = $False
	$btnChangePackageSource.add_Click($btnChangePackageSource_Click)
	#
	# txtPackageSource
	#
	$txtPackageSource.Location = '8, 235'
	$txtPackageSource.Margin = '4, 3, 4, 3'
	$txtPackageSource.Name = 'txtPackageSource'
	$txtPackageSource.Size = '364, 23'
	$txtPackageSource.TabIndex = 9
	$txtPackageSource.add_TextChanged($txtPackageSource_TextChanged)
	#
	# lblPackageDirectory
	#
	$lblPackageDirectory.Location = '8, 210'
	$lblPackageDirectory.Margin = '4, 0, 4, 0'
	$lblPackageDirectory.Name = 'lblPackageDirectory'
	$lblPackageDirectory.Size = '402, 22'
	$lblPackageDirectory.TabIndex = 12
	$lblPackageDirectory.Text = 'Package Source Directory:'
	$lblPackageDirectory.UseCompatibleTextRendering = $True
	#
	# btnChangeCatalogFile
	#
	$btnChangeCatalogFile.BackColor = 'Orange'
	#region Binary Data
	$btnChangeCatalogFile.Image = [System.Convert]::FromBase64String('
iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAABg2lDQ1BJQ0MgcHJvZmlsZQAAKM+V
kTlIA0EYhT8TRRGPwhRBLLaIVgqiIpYSxSAYkCSCV+HuxkQhu4bdiI2lYBuw8Gi8ChtrbS1sBUHw
ALGxtVK0EVn/2QgJQgQHhvl4M+8x8wYCBznTcmt7wbILTiIW1aZnZrX6ZxoI00w/Lbrp5uPJsRRV
x8ctNWq96VFZ/G80pxddE2o04WEz7xSEF4QH1wp5xTvCIXNJTwufCnc7ckHhe6UbJX5RnPU5oDJD
TioxIhwS1rIVbFSwueRYwgPCkbRlS35gusRpxeuKrdyq+XNP9cKmRXsqqXSZHcQYJ84kGgarLJOj
QI+stiguCdmPVvG3+/5JcRniWsYUxygrWOi+H/UHv7t1M/19paSmKNQ9ed5bJ9RvwVfR8z4PPe/r
CIKPcGGX/SsHMPQuerGsRfahdQPOLsuasQ3nmxB+yOuO7ktBmYFMBl5P5JtmoO0aGudKvf3sc3wH
Kelq4gp296ArK9nzVd7dUNnbn2f8/oh+A5rJcrc/aCVFAAAACXBIWXMAAA3SAAAN0gFvkv6OAAAA
B3RJTUUH4wgYDTQRIJu3awAAApZJREFUSEvtlMtOWkEYx6e7bvsAbZM+QZ/BbRdNF13UF+gLuGlM
6IZEEBRJkKAoV7kJiiBKIGHRhJBY71wWLBTlToBFV+Kifp3/9Aw5pbYhlqRJ05P8MufMOfP7vvlm
zrB/59LpdM/29vZauVxucHBwMDg8PBwcHx/fnpyc3PL2xuFwaJVPH3bNz8+/q9Vq1Gq1qNPpULfb
pX6/T71eT9xns9nO3Nzci3FYWFh4SkSPFDVj6MhkMjeNRoOazSa1220RRIKgl5eXVCwWBfl8ns7P
z+ns7IxOT0+Jz5L4LOno6Ij4zIlXgPiM7YpelOdVuVymarVK9XqdEEgN+jC76+trqlQqItjFxcUv
wftYLFZS9N8DlEolurq6EkCkBn3jiCX4bnt7u6joGdNoNK8xvUKhMBFQxq2trYKiZ2x2dvYN3z3D
Ov4JcGBNNjc380JutVo/8GgDPiXa2dlB7Sgej//E7u6uaPE+Go0KwuEwhUIhCgaD5Pf7aWNjgzwe
D7ndbiwymc1mL7PZbPFkMkn7+/uENpVKUTqdFq3sTyQSQo4EIOYJ3Sv3er1C7nQ6RQCLxVJkS0tL
NggA/9GEEOAefTLzUTkvwVDu8/mGcpfLJeRra2vE3Z+Z0WjU3FcaPAO1OBKJ/DZztdxut5PJZPqE
LfoeAyHAOkjwrJYiY4gDgcAPWaPmEKMs6+vrQzlYXFxM4oh4iwEQqIFMZqqWyozVYnXWaniAMONn
xxQ+hEACkUQtlGWQ0tGMR+EBXJjBSzxAIIFIIoXjStXw9bUwrVb7fHl5WQwaHbi6uipYWVl5EHq9
Xsemp6ef8O1E/IfDvp0ISBg+fgR9xM/8mK9Dlh/ZXzl3k4DX/s5gMHyZmZmZEsfF/+svXox9A2WL
rqJ6AIv8AAAAAElFTkSuQmCC')
	#endregion
	$btnChangeCatalogFile.Location = '376, 359'
	$btnChangeCatalogFile.Margin = '4, 3, 4, 3'
	$btnChangeCatalogFile.Name = 'btnChangeCatalogFile'
	$btnChangeCatalogFile.Size = '34, 33'
	$btnChangeCatalogFile.TabIndex = 14
	$btnChangeCatalogFile.UseCompatibleTextRendering = $True
	$btnChangeCatalogFile.UseVisualStyleBackColor = $False
	$btnChangeCatalogFile.add_Click($btnChangeCatalogFile_Click)
	#
	# txtCatalogFile
	#
	$txtCatalogFile.Location = '8, 365'
	$txtCatalogFile.Margin = '4, 3, 4, 3'
	$txtCatalogFile.Name = 'txtCatalogFile'
	$txtCatalogFile.Size = '322, 23'
	$txtCatalogFile.TabIndex = 13
	$txtCatalogFile.add_TextChanged($txtCatalogFile_TextChanged)
	#
	# lblCatalogPath
	#
	$lblCatalogPath.Location = '8, 340'
	$lblCatalogPath.Margin = '4, 0, 4, 0'
	$lblCatalogPath.Name = 'lblCatalogPath'
	$lblCatalogPath.Size = '402, 22'
	$lblCatalogPath.TabIndex = 9
	$lblCatalogPath.Text = 'Catalog File:'
	$lblCatalogPath.UseCompatibleTextRendering = $True
	#
	# btnChangeLogFile
	#
	$btnChangeLogFile.BackColor = 'Orange'
	#region Binary Data
	$btnChangeLogFile.Image = [System.Convert]::FromBase64String('
iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAABg2lDQ1BJQ0MgcHJvZmlsZQAAKM+V
kTlIA0EYhT8TRRGPwhRBLLaIVgqiIpYSxSAYkCSCV+HuxkQhu4bdiI2lYBuw8Gi8ChtrbS1sBUHw
ALGxtVK0EVn/2QgJQgQHhvl4M+8x8wYCBznTcmt7wbILTiIW1aZnZrX6ZxoI00w/Lbrp5uPJsRRV
x8ctNWq96VFZ/G80pxddE2o04WEz7xSEF4QH1wp5xTvCIXNJTwufCnc7ckHhe6UbJX5RnPU5oDJD
TioxIhwS1rIVbFSwueRYwgPCkbRlS35gusRpxeuKrdyq+XNP9cKmRXsqqXSZHcQYJ84kGgarLJOj
QI+stiguCdmPVvG3+/5JcRniWsYUxygrWOi+H/UHv7t1M/19paSmKNQ9ed5bJ9RvwVfR8z4PPe/r
CIKPcGGX/SsHMPQuerGsRfahdQPOLsuasQ3nmxB+yOuO7ktBmYFMBl5P5JtmoO0aGudKvf3sc3wH
Kelq4gp296ArK9nzVd7dUNnbn2f8/oh+A5rJcrc/aCVFAAAACXBIWXMAAA3TAAAN0wG91RxqAAAA
B3RJTUUH4wgYDTQRIJu3awAAApZJREFUSEvtlMtOWkEYx6e7bvsAbZM+QZ/BbRdNF13UF+gLuGlM
6IZEEBRJkKAoV7kJiiBKIGHRhJBY71wWLBTlToBFV+Kifp3/9Aw5pbYhlqRJ05P8MufMOfP7vvlm
zrB/59LpdM/29vZauVxucHBwMDg8PBwcHx/fnpyc3PL2xuFwaJVPH3bNz8+/q9Vq1Gq1qNPpULfb
pX6/T71eT9xns9nO3Nzci3FYWFh4SkSPFDVj6MhkMjeNRoOazSa1220RRIKgl5eXVCwWBfl8ns7P
z+ns7IxOT0+Jz5L4LOno6Ij4zIlXgPiM7YpelOdVuVymarVK9XqdEEgN+jC76+trqlQqItjFxcUv
wftYLFZS9N8DlEolurq6EkCkBn3jiCX4bnt7u6joGdNoNK8xvUKhMBFQxq2trYKiZ2x2dvYN3z3D
Ov4JcGBNNjc380JutVo/8GgDPiXa2dlB7Sgej//E7u6uaPE+Go0KwuEwhUIhCgaD5Pf7aWNjgzwe
D7ndbiwymc1mL7PZbPFkMkn7+/uENpVKUTqdFq3sTyQSQo4EIOYJ3Sv3er1C7nQ6RQCLxVJkS0tL
NggA/9GEEOAefTLzUTkvwVDu8/mGcpfLJeRra2vE3Z+Z0WjU3FcaPAO1OBKJ/DZztdxut5PJZPqE
LfoeAyHAOkjwrJYiY4gDgcAPWaPmEKMs6+vrQzlYXFxM4oh4iwEQqIFMZqqWyozVYnXWaniAMONn
xxQ+hEACkUQtlGWQ0tGMR+EBXJjBSzxAIIFIIoXjStXw9bUwrVb7fHl5WQwaHbi6uipYWVl5EHq9
Xsemp6ef8O1E/IfDvp0ISBg+fgR9xM/8mK9Dlh/ZXzl3k4DX/s5gMHyZmZmZEsfF/+svXox9A2WL
rqJ6AIv8AAAAAElFTkSuQmCC')
	#endregion
	$btnChangeLogFile.Location = '376, 294'
	$btnChangeLogFile.Margin = '4, 3, 4, 3'
	$btnChangeLogFile.Name = 'btnChangeLogFile'
	$btnChangeLogFile.Size = '34, 33'
	$btnChangeLogFile.TabIndex = 12
	$btnChangeLogFile.UseCompatibleTextRendering = $True
	$btnChangeLogFile.UseVisualStyleBackColor = $False
	$btnChangeLogFile.add_Click($btnChangeLogFile_Click)
	#
	# txtLogFile
	#
	$txtLogFile.Location = '8, 300'
	$txtLogFile.Margin = '4, 3, 4, 3'
	$txtLogFile.Name = 'txtLogFile'
	$txtLogFile.Size = '364, 23'
	$txtLogFile.TabIndex = 11
	$txtLogFile.add_TextChanged($txtLogFile_TextChanged)
	#
	# lblLogFile
	#
	$lblLogFile.Location = '8, 275'
	$lblLogFile.Margin = '4, 0, 4, 0'
	$lblLogFile.Name = 'lblLogFile'
	$lblLogFile.Size = '402, 22'
	$lblLogFile.TabIndex = 6
	$lblLogFile.Text = 'Log File Name:'
	$lblLogFile.UseCompatibleTextRendering = $True
	#
	# txtSiteCode
	#
	$txtSiteCode.Location = '338, 172'
	$txtSiteCode.Margin = '4, 3, 4, 3'
	$txtSiteCode.MaxLength = 3
	$txtSiteCode.Name = 'txtSiteCode'
	$txtSiteCode.Size = '72, 23'
	$txtSiteCode.TabIndex = 8
	$txtSiteCode.add_TextChanged($txtSiteCode_TextChanged)
	#
	# lblSCCMSiteCode
	#
	$lblSCCMSiteCode.Location = '338, 147'
	$lblSCCMSiteCode.Margin = '4, 0, 4, 0'
	$lblSCCMSiteCode.Name = 'lblSCCMSiteCode'
	$lblSCCMSiteCode.Size = '72, 22'
	$lblSCCMSiteCode.TabIndex = 4
	$lblSCCMSiteCode.Text = 'Site Code:'
	$lblSCCMSiteCode.UseCompatibleTextRendering = $True
	#
	# txtServer
	#
	$txtServer.Location = '8, 172'
	$txtServer.Margin = '4, 3, 4, 3'
	$txtServer.Name = 'txtServer'
	$txtServer.Size = '322, 23'
	$txtServer.TabIndex = 7
	$txtServer.add_TextChanged($txtServer_TextChanged)
	#
	# lblServer
	#
	$lblServer.Location = '8, 147'
	$lblServer.Margin = '4, 0, 4, 0'
	$lblServer.Name = 'lblServer'
	$lblServer.Size = '265, 22'
	$lblServer.TabIndex = 2
	$lblServer.Text = 'SCCM Server:'
	$lblServer.UseCompatibleTextRendering = $True
	#
	# txtLicenseKey
	#
	$txtLicenseKey.Location = '8, 110'
	$txtLicenseKey.Margin = '4, 3, 4, 3'
	$txtLicenseKey.Name = 'txtLicenseKey'
	$txtLicenseKey.PasswordChar = '*'
	$txtLicenseKey.Size = '402, 23'
	$txtLicenseKey.TabIndex = 6
	$txtLicenseKey.add_TextChanged($txtLicenseKey_TextChanged)
	$txtLicenseKey.add_MouseLeave($txtLicenseKey_MouseLeave)
	$txtLicenseKey.add_MouseHover($txtLicenseKey_MouseHover)
	#
	# lblLicenseKey
	#
	$lblLicenseKey.Location = '8, 85'
	$lblLicenseKey.Margin = '4, 0, 4, 0'
	$lblLicenseKey.Name = 'lblLicenseKey'
	$lblLicenseKey.Size = '402, 22'
	$lblLicenseKey.TabIndex = 0
	$lblLicenseKey.Text = 'License Key:'
	$lblLicenseKey.UseCompatibleTextRendering = $True
	#
	# picturebox1
	#
	#region Binary Data
	$picturebox1.Image = [System.Convert]::FromBase64String('
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
tUN1Z41qTU0td21eHaouru7DBa8LvReNLjZfkrl0tp61PucyuBx3+eMVnyuDVy2vdjSoNVy6JnLt
5HXy9exGqHFX41xTcNNos3tz3w2LGx03NW9evyV7q6pFoKX0NsvtvFZia0brWltS28KdyDsz7UHt
4x07Ol7fdbv7vNO+8+k9y3sP75vcv/tA/0HbQ+2HLV0aXTceqT1qeqzyuLFbufv6E+Un15+qPG3s
Ue1p7lXvvdmn1dfar9vf/szo2f3n5s8fD9gM9A06D7584fVi9KX/y+lXYa/mh+KHll/vHcYMZ79h
fFM4wj1S/lbibf2oyujtMaOx7neO716PU8Y/vY95vzKRMUk3WTjFN1UzrTDd8sHkQ+9Hz48TnyI/
Lc9kfmb6fPKL+Jdrs3qz3XNucxPz0fNrX3O/cXyr+q70vWPBbmFkMXxx+Uf2T46f1b/Ufj1Ycl2a
Wk5Ywa0Ur0qs3vxt+Xt4LXxtLdI32nfjKAAjFRUYCMDXKgDo3AEg9wJA9NzMzbYKjBw+UMjdBZKF
PqEykDdqDzoTY4KFsY9xxfgIghVRggZHM0PbT9dEX8VQyVjP1EzqID9m7mV5yfqWbZr9E8c85xLX
Kg+KF8dH5KcTIAmShFiF2UXYRNnFuMV5JPgl+aUEpYVlRGXFtknLyckrKqgoaijpKhurmKuaq5mo
m2iYaBpq6Wtr6WjoKunJ6osa8BgyGxGN1oy/mUyavjLrNm+xqLY8apVqHWLjZmtsp2wv5sDlyOiE
d4ZdIFeUG9qd4MHoyeElvF3GW2KHsA+fL6cfC4XsTwogB7IGcQULUqVDVENNwlzCqREpOwsiK6LO
RBfH5MfmxmXFZyccTizeVZ3Umvx6N9gjnbpj74m01/sEM3bubz+APSiUpZBtkOOYG3go6XB+XvWR
O/lDBQvHmI7LFFoUBRbvO1FWcqO0/+T7UwuncWc4zkqWa52zrfA7H1u5v6qwurrmRu2juqELHy/+
qsdfZrsiflW3wf1a1PWsxlNN9c1tN7pu9tzqbXl8u6P1SlvpndT2HR0ad0l3Jztv3Ku9f/JBzsPE
Lr9H5o9lu+m7Z57ce3qyJ7LXoI/cN95/9Vnac/sBkUH04IcX3S/rXxUMxb52GVZ7w/lmZWTkbfvo
+bGsdzvHnd9rTQgjq2xx6vn0tQ9FH1M/hc1QPlO+RM7mzF2fn/2m9/3sIvlH8S+ppacrqb811tb+
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
aafZI/NeixeWb62mrOdtlu3w9qwOYo7qTtbO/i67XUvcbrgPeax6CW638I7dccanxw+iqPhHBNQE
TgaLUkNCroQuhZtGFO6cjtKK3h3TFoeOt0ooSpxMUk8+nDK1xzi1Oo0+fde+KSSe9B60yHqQY5bb
fdghbzQ/9SjvsTuFgcX0J5pL/U+Ry+6f2V2ucu7r+StVcTVaddgLA5fOX0656nVNpZG+afzGtVv7
btu0sd8Z66jpjL6v9RDXNfi45sneHq8+nWciA0yDD186v5p4nfSGeeTqqNPYynj1hPsUw3TXx4Mz
ll8YZ1/Mn/kWsqDyA/WzZ6l0Jei34tb8wwALaDcigDhQQVaAGwgH+8FpcAsMIftfELKA4qAKaBBF
gzJCdn4HjIft4dPwV7QFugpDwERj3mKdkN1ugxvAU/C/CIVEdeIEzQlaPdphumR6fvouhgRGScZx
ptMkP7IE+QfzA5Yy1mQ2T3Y9DilOdi4abhT3Cs8S7wo/EMAhJ1AeYVkRbVEHsSDxvRInJK8jefec
LOM2BTlX+T0KFYo9SssqEqruagXq/ZrMWu7aFTqzetr6hwzeGika55iMmWmZF1p8tbKzvmhLaxdm
/8hR0inH+aOrhVutB8GT6vXAW3THfp8JP0NKZQAc6B90lyoakhk6HW4VUR/JEpUYPRprFHcpgT1x
z65PyW7IPlVJrUrjSD+cgd6fkvn1oEfWley1XKdDVYeXjjjmXzpKPEY9fr9Iqjj3xGyp68nbZaKn
85HY73+u+7xmZVU1U01S7eQFx4st9aKX864sNnhfu98o03Skee6m/a1Lt4mtgW2t7aSOgLuN99D3
7R6UPhx/JPGY2l35ZKyHs9e+b3//tWfvBoiDci8cXka/OjxU8/ru8MCbyZH5tytj0DvcOPY9dgJM
LE1+nhqZfvKh+WP5p4MzEZ+tv0jN4mbfzjXPZ331+Cbx7ev3loX0RaMf2B+dP1N/af6aXzq/7LFC
XGlcpfym+311zX19/mMCFRU2Xh8QrQEAmJG1tW+iAOAKAFjNX1tbLl9bWz2HJBvDANwJ2/zvs/Gu
YQTgDNc66ru88B9/XwD4H4lJxUTZKu7dAAAXNUlEQVR4Xu2dZ5AV1bbH32c/WJZVaqllLsv0fGbF
e1UUAwYwX1ExgQFE3zOghBlkCJKzBMlh8BIl55xzlChIRpIoklXQu9767X2O09Onu09mzgz9r+pi
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
rkJggg==')
	#endregion
	$picturebox1.Location = '9, 14'
	$picturebox1.Margin = '0, 0, 0, 0'
	$picturebox1.Name = 'picturebox1'
	$picturebox1.Size = '225, 70'
	$picturebox1.TabIndex = 1
	$picturebox1.TabStop = $False
	#
	# folderBrowser
	#
	$folderBrowser.RootFolder = 'UserProfile'
	#
	# Application
	#
	$Application.AutoSizeMode = 'Fill'
	$Application.HeaderText = 'Application'
	$Application.Name = 'Application'
	$Application.ReadOnly = $True
	#
	# Path
	#
	$Path.AutoSizeMode = 'Fill'
	$Path.HeaderText = 'Path'
	$Path.Name = 'Path'
	#
	# Exclude
	#
	$Exclude.HeaderText = 'Exclude'
	$Exclude.Name = 'Exclude'
	$Exclude.Width = 55
	#
	# Supersede
	#
	$Supersede.HeaderText = 'Supersede'
	$Supersede.Name = 'Supersede'
	$Supersede.Width = 69
	#
	# ActionName
	#
	$ActionName.AutoSizeMode = 'Fill'
	$ActionName.HeaderText = 'ActionName'
	$ActionName.Name = 'ActionName'
	$ActionName.ReadOnly = $True
	#
	# ScriptPath
	#
	$ScriptPath.AutoSizeMode = 'Fill'
	$ScriptPath.HeaderText = 'ScriptPath'
	$ScriptPath.Name = 'ScriptPath'
	#
	# ArgumentName
	#
	$ArgumentName.HeaderText = 'ArgumentName'
	$ArgumentName.Name = 'ArgumentName'
	#
	# fileSave
	#
	$fileSave.OverwritePrompt = $False
	$fileSave.Title = 'Select or Create a File'
	$grpSettings.ResumeLayout()
	$grpActions.ResumeLayout()
	$MainForm.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $MainForm.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$MainForm.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$MainForm.add_FormClosed($Form_Cleanup_FormClosed)
	#Store the control values when form is closing
	$MainForm.add_Closing($Form_StoreValues_Closing)
	#Show the Form
	return $MainForm.ShowDialog()

}
#endregion Source: MainForm.psf

#region Source: Globals.ps1
	#--------------------------------------------
	# Declare Global Variables and Functions here
	#--------------------------------------------
	
	
	#Sample function that provides the location of the script
	function Get-ScriptDirectory
	{
	<#
		.SYNOPSIS
			Get-ScriptDirectory returns the proper location of the script.
	
		.OUTPUTS
			System.String
		
		.NOTES
			Returns the correct path within a packaged executable.
	#>
		[OutputType([string])]
		param ()
		if ($null -ne $hostinvocation)
		{
			Split-Path $hostinvocation.MyCommand.path
		}
		else
		{
			Split-Path $script:MyInvocation.MyCommand.Path
		}
	}
	
	[string]$global:ScriptDirectory = Get-ScriptDirectory
	
	
	
#endregion Source: Globals.ps1

#Start the application
Main ($CommandLine)
