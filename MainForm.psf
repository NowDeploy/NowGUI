<File version="3.1">
  <FileID>740d0865-c346-49f8-a558-8a814dddc9bc</FileID>
  <Preview>iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAGIRSURBVHhe7b13cBxLnuf3FJLiFKGI243QH6vb
i1BoN3S6k9nbuLg7uVid9iJOc7rb250dt/Nm3puded7P84/ek4/eO5AACYAEQQsQAOG999577y0d
APqv8pvdRTb7NcimAUiwv5/gl11dnZVVja7K3zezsjJfE0IIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEmC82/OEf/kHSJ598mrRj176krVt3JW2RJEmSJGlRaev2XUm7du1J+vf/779LMrGd
ejR/8Af/MG/bzr0oa+5HQ88U6ronJEmSJCngVd89ica+y0+lOrNtvYmpDb2Xn1j1Pdz2yffd1E9d
QV5ZPf76r/8G7jA/Nx999GlSedMA8uv6kFXZ4VJVNzKrB62yagbc69slSZIkKSCUbeJeZkUbotPK
cTaxGOcSS/wS00alliOroh3JhXWIyShBbGYpYjPc4rK3nM+MYozSSpuQXtqCc0mlD+87yYc89n0m
ocjkV4WK9nHEJmY83gDs3rM/qXngmvnCbcgpqUFOaR1yC4uQm3UeWRnnkZ2dgJyKFuRUdyHXKK+2
27x2IrfGLBvlmOW5lFfbY4xF7yPT+ZNPbk038t379fU5ZdOYfeXW+P6csvsyx+R8B19pfMlJm2f2
8bjtmLf9PlUd9pj43lc6SZIk6eVVfl0P4rKqEZNahqyyFqQXm6Dsh5g2xpiGi+kVSMopR0Gtyau6
A3lV7Sis6zIyscrEqXwTJ/Jru1BUb+JEdbtJQ5m4UdmKhNwKXEgpR2JONTJKm22+GSXNyCxrRZpZ
zjXmJL242XzWgkz353bf5a04b0xARkUnCisaHm8Atu/YndQ2dB35VW0mcLWioPc2ijMPY6LoXUzV
fovys/8BWcXVKGocsl8kq6wZhQ395kDbkFtldtLQ51J970MqauhFdmk9knPMH6+y02zvnca1Hb90
jvkyc+XjStNqvlyjXS7ykaaocQC55ssmmz9ajjkmm+ahdHzfj4KadmQU1dnvQLPgK6+H5fq8yGxb
1NCD7LImE9C9t/NY5ncuNz9OdbfdpsD8jbLKW+y+f3A8fi97rpMkSZIWQiVNA4jPqUVSXp2t/Dkt
5NkmxrBC7Cm2FjifM21yfr2pyVeauFWHspZhGwNKW0dMYK/B/qOnEXYqBuGRsTgccgYRFzNRatIw
ZjBdSWM/UgtrcDGtwgT3Ftc+TQxNNQYgJCIWYZFxOBB6EaHmNeRkDJIKG2zcyyo3BsJUcGPTK80x
GlNRWuufAegcnUVx8yDyz59G9sEgZJ9ejTstnwEDv0H5qX9tgmY9ytsmUVzbiNNnopBR04fc4hIk
5TagvHXI/rFKm4eMBu1rmVF5ax8uJaYiIbsEsUnZyKsbMOsHUGy+XFnLkPmSfShpGUFeSRnijcsq
bxsxzqjHlYf5w/OVP0B56wCSUlJxKcccg9lXEdOY7Zmm2ARc/uEKKmpxKa0AaQXmi5s/FPO3eZlX
7rPIHF952zBSMzLNH6fMuqwSc4wlZvtiYx7u79PZrzlG5s3tyloHkZFbgvRSY46MWSlu4nY9djvn
e/CHK2seRkXbIC7FxRnnV4nqrkmkpiXjTGyO+Z7DJr8+93HTTPC4h8w65sO/xzBKbT4mjf078ru5
0jN/pnnoGCVJkqR5VYWJGUn5DUgxwbywrs/U0llz7zYV3y4kmnX8jK+ppiZewJZltpCbNEybWtCA
S9k1prLZgEoT+Fl+13RP4sR5E8viEpBoYmNU9CXkZGUj6Pg5E2dcaajy5n5T269HXGa12b7VVCjZ
+t6NTBPgDx07i6bGFiQkZaC5uQ1HzLYpRayY9tjWacasuMwqFNSZCmhZnX8GoHv8Jkp6plC09BPU
/OjfIGrFL1B77p+gOfIfInbnP0VeRSsqO6dQWt+MS8mZSDQ17czCCqTlVyMttxBxKblIzTfrTA05
q6AUaUWNyCmtRHxqAUrap5BbWIyUghokp2bgYkqeCdRliEvKNIG/BJlFFUjJq0JGfonJJ9sslyG1
qAElta3GBdWjor0P0VExSC5uQqZJE2u2Sy9tQGpWrjEX1ajqGkVaZh6yjCnhH7iqfRBp2QUmXRbS
zfGkZRUgJiHDuLhyxF5KQEJetTn2GuSU1SMhLQdxybnmeMz+S5uRX16H9MJKY1yyjJFoQ3J6hvlj
FiM2Lt7el8ksrHZtl5KF+MwS5JTXm7TpiEnORk6t2X+XMRnpmYhOLDDBvBsJycm4ZH6MwupGRMUm
m79PIxJTsxCTmIGMcjbRVOJ8XJo5ocx3NcfJezZpxQ1Iz8nHhUtmudAcc0I28o3BqGwfsQZIkiRJ
mn9Vd44ipbDRxKFGUyEbNEGerbEDOB6ZgKiYZMRcSsdFU36HRUQjOrXMVFhNZdSkYdo0E5Tjc2uR
U9GE6o4xk98w6nqvIDImC5dMHNq49TCWrd2Li9FxOHHmkqmgutJQFWbfWSZW0EDkVLSjoL7P3o5g
RfHkxWwcCz2Nm7PTiDxzEUdPJ1nzQAPCVm0aiPisGtsqXmjikzvMz832HbuSeidvo3LgCi4t/RoR
f/4/48S+gziSVIo9p9KQnJKE8oZOE1wvo6y+EUlZFSisZUBLRFJGgQnClShr6jTr85GcXYR4G1Qz
TRCvRHJmEUraRpFtTEFKTgEumCCYXlqPFBO800vbkFNcioTMQqRk5iPeBNjS5m6TRwHSTU0+PrPA
uJo+1PWNItWkyatuMYYi39SK+0xeuWY/+cirH0R97wSycguQavKr672MioYWYyQKTV69Jq88XEot
NK7NBHOTX3J2CfJqOpBu9hGfXmCdVabZNjGr0PxgDcgtLkeiScfvWFLfgcS0TMSm5pj9me1qu5Bh
vkO8MSmZld3GXVUgISMXyXm1Zrsyc6I0o75vzBgOk5cxQ9ao0NxkGeNQXG1MSAoSswtN/mUoqDLO
MaPYrK/AxYQ0893zTeBvNoagGgnp+eakSkayMUzpeSa9MTnVxpzRAFR1jEqSJEkLoLqeCVsuWwPQ
ZAwAA3F9P/YHRaC8tBRVlRWoq61B1IUYhF9It0GcaZg23RiApPx65FY2o6ZjwgT1UROrruLUxSxE
njqLxIRkREfHIjE+EYdCzqKqc9KmoSrbRkzgb0Z8Th3yqjpta3Nx46BtBdi684htQdh7MNQYiUTz
/rCp6LaaeDdkW6JpIOKNcShtHkZRpV99AHYl9V++i6q2IeQXlSM/Px8n4kvx9tEZ/GxTp60tV5nA
TPdS2dxugnOdCcpTSElNR5qt8RebYFyAQnOA+cUlpibdihyzLq+hD5k5eYhLzbUdFarb+02gz0N6
SaPZpggX49ORkl+NguomZJc2IqeozATrPBPUB0wQb8LFpBxU9Vwxf7Qxk77c3qLILSoxafKRawJ6
TlEVippHzI80hepWYxxM3ommtl5Q34WcwlKbLq+mHdlF1eYH6TWvVcg0y4UNPcZ4VCO/qgmpuYW2
dYCdLlKNWYhLyUFmSa05nmaU1BrDYWr6KQXVyC2tMsdagayiGnO8zUgyJic5zxx7jTn28lYUVdUj
u6ITDf3GjBjzUlzfjbS8cuMIu5BdWI30fB53LrJKa5FV3IjSxg7bmpCaawyTCfh51a1mO/P9k9Jt
q0d2UanNP7esBlklLajtnUJN17gkSZK0QGowcS6jpBUZxS2m9j1ig3CpeY3NqMDRk5dwLDIRIZEJ
CD2bjJyqLpSYoMs0TJtptksuaLD9wOp7LqO6cwK1phJdZAxCRHQGImMycSY2294SSC1sMHHMlYaq
6Rw3gb8Vibn1prJtav4mqDPPkqYhnE8sQPi5FFwyFcMTF9JwNj7XBP4BlJvPeTu82myblFtn3o+i
uLLRPwMwePWe2ekoyupaUdnYhjRT+zx8rhQhF0xALTU10NZ+E4gvm4OcdGvK1HYvm3Xm1bik6s6x
B++N6pzX7nET+E2Q5rON5vO6nnHzRxg3RqMU6cWtJmAywDvpJ135mDRsMcit6UFj35WH98k0xpnx
WPiMpPNZvUnH46gy+6r1Svdge4/0Zn1t55A1HbHJuSjvch0rf3R7PDYNg+6YyY/Lk3bZrjffo9b8
rXi7wUn7A5n1/L7cjst0kvxRXcsP0rj2OWHSTVgTcSnRmJG6ATQNXDbfZdjsg5/NsQ9JkiRp3tQ0
cMXed2dtvtaU01Vtrtp5XfeUiU1XTRn/QNUd4/YzpmHaDLYcFDWj0FRCWwau2Wfz+Zx+8+A1dI7f
ROfYTXQYdY7fQtvwjPs5/is2XYOJF+ywnphHA9FlYuiYyXvU5k0zwf3Vdk2iwVTKKa6vcu+7zuw7
IbsGle3jKDGVXHeYnxuXAYAJNAxYLvEgOkeuosOogcHV4zNfmjuNOcCHPnO9rzHBrbpj4gfb8YvV
dY2ipI4tDmbfHp89SDP38Xh+9uh05g/Ywc6DzdZZNfRfNetdf8yH0tl1zrLv9f5qruOx680PXlzd
gsK6XmMwXN/7UccvSZIkza9YBrNGnZjbgIScOiTm1Pslm9Zsw9o8O3HnVbbap934pJ0/yq1osR0Q
y5pHcCmr1uc+5lJ8Vh3SilrQNnLTzxaA7buShq8DLcYFtBh34lv87Dlp4Cpah64bmXzN8g/TXDMH
P4PWH6x/jnIfQ/vorHFf1+c4joUUv/Ms2kemvdZLkiRJL0Q2Tpiy2cQIvj6JHmxj4stDsfTxaqXM
dnw8/+n2PY3uydv+GYBNW3YkzdwB7ty9J0mSJEnSIpf5hxJ/DcDsXQghhBDiFUEGQAghhAhAZACE
EEKIAEQGQAghhAhAZACEWARcmRjF6OS0+52L2zdu2NeZqTFM37SL4qm4h/ryItS0Dbjf++DeTaRG
nUVRVQcmph7+HR7HzVnX73R1fAQ379lFIV4KntoAtLS0IC8vD9nZ2aipqUFGRgZqa2uRmZmJqqoq
5Obmori4GKWlpcjJyUF1dbVNU1dXZ1/5nuv5OdMxL27H7Z00zI/5l5WVobCw0I5AWFFRgaysLPuZ
k4bvuZ6fMx3Tex6Xkx/z5364v5KSEr+Pq7Ky0h6X5z6Zf3l5+SOPi9tw27mOy0nr+fd6luPitvxc
vGrcQcjaj7FiT5x9V1WQiYKyWpzZtwl7gsNx8uR5jF+ZQVFmMorrOoG7d1FXnIecsmqzJdBUmY/s
gmrII/jiLvITIrFz336cjk3B+PgEMpKTUdM+ZGL+DZTnZaKkvh2jLTn46OP3cPhQKCpahtHTVILM
jCy0tPfh2vVZXJ+awpXL19BcVWy27UJ3Ux2Kiypx5fo1BG9YgiMRpxF5Jt6kvW7zr+0cwb0bsyjL
zUBhTbP7WIRYWJ7aALS1taG3txe3bt3CnTt3Hnq9ffv2Q/KV5knSLmSa553f80rjT9rJyUlrBsTi
Znp6GteuXbPiozrX+2txZP9u7D1yHGkmeGzfdRSlVQ04vfd7HD4Rhj3rdyLiVCSOhp9H6BETyCJO
YuPyjdi1fR9iU1Kw5LPPEBlfYg3AzMzM/bwDRbxOHO7du4frJghz/fXrpiZ/exxbN+3FoPvz1POh
CDoRhZCjB3Hq2HFsXL3J/B0PIyEhGpt3rMPhXccQE52MY0Fb8e1nX2DXtjAUl7Wh1hjw1LgErFm+
BCVtXcg4dQC//eXfYe/5FETs3ojjkSewd/1unIiIQGhktEf+G7Flww5U9V7G7Vs3cfXq1R8cvyQ9
i3i+87z3xVMbANZI29vb3e/Ey8DExIRtbRCLl7um9j4+Po7Z2Vmru+bCTQrfjk/XbsP6JV/h7fe+
wKFzGZg0Nf6Ci6FIKi5BwqEgbNl1EPEFjUg7fwj79hxBdk4jmnLSEXepEDnx57D0m7Von7qBmzdv
3s87EHT58mVbCDrcuHHDXif2c95CuTuD47u34Vx6KZpbm3Bg315kVLQh9tRu7N9xDGU13SgzgT3l
UgKS8uJQm1uN6BOnsW7pl9hx7Dzqs5NxPOQ0wvYG4dy5WERfTDUu4yp2b9qCrVtWYtuxOGTHnEB2
VSWitu/G5n1H7MyeF0/uwoFdx1Fe142icxeQVzNkjPxta9C8v4MkPYt4vvO698VTGwAG/4GBR9wz
EwvOlStX7C0DsXihAeDv+IC7qCjLx1UuzoyhNDsXkaFBuJBSjuHuWpy+GIvy0nqMDfTi5JF9OHUp
G6ODI+jsHMJYfx8aq6px1tQ6T8amYvYmbwgEFgz4rAE5eL8n0xMdCD2wH6cv5WNiqBNHDxxATFY5
RnoG0Ns/hoG2DnR3dKCtuwVD3UMoSz2LD99+A+9/+BVyaptx8UwwQiPi0dXVi9aWDty7exulmTEI
CTmG6uZh9DXm40xcImoqmzHa04ag/ftxKafS5N+P3oEx9DW1YGDs4WMS4nlBA/zcDQADTVdXl/ud
eBngLQD2DxCLFxoA1lrF84E1IG8D4Nki8FTcnkRqzHlEG7M1ccu9ToiXFN5Weu4GoKmpCT09Pe53
XtzluMEP7rs9BD+jvLlhLtIro8CtWfcKD24/xVVm9++678E/wNjYmG1a5at3DYDwPjoDKNN4iulZ
iBDeS2RzivMZ03vDApzyB+bHv2FnZ+cPCiUez+Py8U4zNTVlOyaKxYsMwPNlXgyAEIuIeTEAfAqg
r6/P/c6L8ovAgdeBkQ73Cg/yTwCFke43Bgb8lP3AwV8Dh4wOvwnkhpvY7d4hOy9ErQEaMlzvPalL
Ay6s/qFpmOw361eZhVtoaG7B73//e+zcuRPbt2/Htm3b8P333+P48eMPFQxnzpzB119/jV27dtl0
jjZs2HA/qB47dgxLliyxee3YsQNbtmyxqq+vt58T9sZPT093v5sbdtbbtGmTzYf75H5iY2Pdn8Ia
Dx7jXJ03WLAFBQXZDmMODBx8okAsXmQAni8yACLQmRcDwADW0eEjwJPE3cCvXwPSDrpXeHB+JRC9
1v3GcHYZsOXfAxVxQEcpUGTMwYb/x5WHw+G/B2I2ut94wCD/+Z8AE15GpDkP2P1js3APaRmZ2Lx5
s/0j8N4qX4eGhhASEoJ169bd7yHMQJ6UlHQ/nSMWxs4fb/Xq1fbxOycNa9x8/9lnn93vEBkeHo7Q
0FC7PBes9X/++ef2MT7mzWOgmaK5SExMtGlYu1+1ahUaGhrse2/4OCENhKdBYOsEHzcUixcZgOeL
DIAIdObFADD4Dw46D894kbwP+Op/BA6YGv1trx1Hrwfivnctd1UCK/8V0PegBm2pzwRW/W+mGuy+
xXBpCxD6kWvZk6PvAB//MdBe4l7hJu8kEPK+XczIzMKhQ4fssjcMoE5tnbVwPkf/KJjeV0BOSEiw
25PIyEhERETY5bk4ePAgLl686H73AD5W+d1339lH+khycrJN6wu2Yng/888fei7DIBYHvgwAW3lo
Nrle8i3+fXzd2pMBEM8Tnk8v67XISqMv5sUAsKmZYwH4JH67KwDv/gnQ6lUj9TQAGUHA/r9zLXty
xwTAzT8CSqNd74vOADtNjd6z78CNade6L/4EKHOnc7ho9hHlamXIyMzEgQMH7LI3DP779hmzYmAA
f1ztmQbA13P2bFFYsWKFXeathMcZgDVr1tj7/r5grZ9GgPCHY6sAWxs8YWvBypUrf/CDs18CWyTE
4sWXAeAtKA40xUdvJd9ieUQD731NyACI5wkHceOAbr7OwRclHhMf/x4ZGXEf5cPMiwHgEwAMfD6J
NQE+egNwfo2ryd8TTwMQs8l3zZ7QGGQfcy23m5rupn8LXB52vSejXcC+XwB7f2YMx1b3SjfhnwAF
J+wi78nPZQBYaGzd6tr2WQwAA7RjAM6ePftIA8DmfgZ53uP3BfsCNDc/GBmMrRdsYfDkxIkT1mh4
wx+6sbHR/U4sRnwZAF7gNH39/f33xWtveHj4oXX+iOedr/We4uO9TMd9cj+e2/Az72Phe6bhZ57p
5krL9b6OnS2KzrKTzjkOz3S+xLT8Ozm39BxkAOYX/i35N34RcMwEX60+8wlbWLu7u++fd7w+PM9D
f8Rzn+e6P9eiP2Je7IfGfH0xLwaAzmPOgYBiaABMoGftf+u/N1ehxwXnaQAuGpNwfA4DcOBXQM5x
1/LUoIm+fwl0e3Rwa8x29Q1ga8OxD9wrDez9v8eYgibzueFRBoAFBu/9k927dz+1AWCBzRo5eZwB
YPM+07K27gsaAHawdGBAZ4uBA3/I5cuX+/yx2QdALQCLm7kMAAsd9h2hGBD5GG5RUZG9+LmOBRGX
+RlbkFgw8NUJxPycrU6pqak2vbPO2Zbnk5M3xdYx5sf9cJnpeQzOrT+mZzpuw4KMQ1KzPGAthGmd
vJwCisfC7fkZKw88dn7uFIb8nNs4eVO8DrhvJw8ep1P4Ovt3/i7cnmWSDMDCwEpPfHy8veVJeQ5A
xn5Jzu/AV2eZZR///jzHiWcHZv5OczVhe8P8OCz6pUuXbOUoLS3tobyc/TE/Z5nH5ARBnis8Fuc4
mGauztbe0ADwGuA5x/OQ55xzfjrnpCPuh5851w63YRq2VLW2ttrY5JnO2Z7vmZ+znWfeXHauLa5j
Wi4zLvG9L+bFADxyICAagLPLTWlm/vg0ADXJ7g8MDxmAjf4ZAPYj2P5X5mijXO9JbhgQ+Y3rSQC2
Ajgnz6Q5ph1/7WohMDzKAPDHex4G4ElaAJ7UABC2GDjreKHxyQFf8Dg0ENDi5nEGgBc7A+hHH31k
z6Po6Oj7nT95m4DXJQsFFjAsVFgzoIlkoUMDwD4mDNLMk4UoCw2eUwUFBTbAMv+YmBh88cUXtoYV
FhaGr776yha2zIu3zHjrj4GZx8Htue0nn3xi+6TQgPI4+UQLjSvLCF4zTkHF78GnV9ihlv1gaAR4
zrJDLJ/CcebF4DZcT7PL89qZD4TXDQthdoLlK78j98f8ZQAWBv6Ned45LZUs03g+OOUnf+fTp0/b
5XPnztlzgZ9TPD/4Sv7qr/7KpiW/+MUv7LngD5xzhfnwnDx//rw9t9l5mkGc1w+f1iL8nOcYP2MH
b56r3Aef4uJxOZ212aI6ZyzzwjEAo6Oj1viw3Of35m06Xge8JngN8lpjOl6HfGSe+TN481hYnrNl
l+c2jTP/Bjx3eR3yXOY1wvOd1wDPdy7zOzNPpuN1yv0wtjlxeMENAC/Oue5jWwMQ+Z1r+fwq8xf+
vWuZPI0BIMHvAAmmtu/AJwmSdgEj5hhoMq647390lgH7f2GudNdF/yQGgIXQo5jLAPAHcAwAT/zn
bQB4EjsdGXnLYq4Jfzgugb8XkXg58ccAMKDzCRaeSxs3bsSFCxfseUNjyPXsPMr1rBnxvHz//fft
ehbafAyW5xfPZQZoFkB8IubHP/6xLUxPnjxp037zzTe2AGNhyXOahSQNAG+VcVumYUHLwp3LH3zw
gS2I+XTLp59+arfjfrnPn//85/YaZPDltREcHGyPnUaCheCbb75p1zEIMDiwgHz99detEeF1yUKX
+6D4+d69e+3nLNRpZmQAFhaW+6z9e8Lgy4BI+Jv87ne/s785zz/ervzNb35jAxGDJc8Z1s75eDZ/
YwY4nis8fx4HfzvW+vnb/+mf/in+8T/+x/acYsuWEwD5VBb3TVPK4+T5x0DJMnfPnj02Dc8JPuZN
mJbnkD84BoDfkec2rwsGZJpanr9r1661x8PriN+N5vntt9+2AZuGadmyZdbQcvsPP/wQ3377rU1L
M86/Ect3GhNeTzz3eX3yGuHfk9fb3/7t39q/H693Xof8XjQWC24A6Gp40fnE0wDwNsDGf2uOwh3w
ntYAsGNf2MfuN4YjbwPF50xEvQFs+RHQ7Q7exeeBoN+6lg3+GgAWnhT/4DyZKJ5onicGe9573p93
4A94+PBhu/y4pwCexgAwsPPEYYHJE2yupjIGDtYCxeLFHwPAa481eV78DMislTN4s+BgIcEgTAPA
VgKeiyzoeB2wwOA5zho2X2kUWCDSAPBRWQZeXg8skPmeNSgWcHFxcTh69Kg1njQQ3CfPM+ZHsTbG
/FjQs9B699137dMrfM/rgYaA1xMLPubJ4+X3YeHM9Kz50zBwGxawzIsFJ/fFtDxOGgTW2ngcvA75
ylqY83eRAVg4WD4xAHvD35pGgL8JAxlbpvj78Rzkb8paLEcqpaFkmcbflEGU5yd/W56jj4PnEPdN
0/vHf/zH+KM/+iNbOeK2Ti1+/fr1dt9c7+yb6Rl0eY5x3yzHeY6zlYvn4JMaAKd1jectW31pAHjt
sGznPpYuXWqD8q9//Wt7XTotAjSxzIPX0pdffmmvI67j34R/M5oW/j2ca5PracbZusDrwWlxiIqK
stcITRO/14IbAP4B/TIA95vvTWAmT2sA+Gjfzr8xC/dMnrdcnQQ7TG2fHHwdqHRNlYqEHcA5V22c
+GsA+EfnH5cn4qlTp6zY/OkZ8HlisTbOC4Dr+UdnGhbGvA9K5sMAEF4sdIjeHQI9YeB4XCuGeLl5
nAHgNUexCZ2FDAsAfsbCjAUZawM8B1k48RzmOcrCjwUvX3l+s/A6cuSINZMsjFiYMKiysGEwpxFg
ocl1/JxGg4UP17OJngUXgzaDOq8hHgvFc4+1c15HLNhYEDpBnq8soFhY8TiYJiUlxY6bweOg8eZx
U8461qB4bDxe5sFj4PHQ4LCWx+/E2pcMwMLCvykNJ//2DjSNTgBnWegs81YNm7YZ/Bi4eF7yt+X2
/P14vvKcoqnlb/s4aDAYHBlAaVx5vvG8o0llxYifO2OpcH88n7lPJ1DyPOF5xPVsLaVB4bY8L/yB
x8jvwu/Oc5ZGm+cd4wKvF56/3BfPd5oQVg4Zf5zbZTxWnvs06rw+2ZJOA8HjoZmmuebxMA++8ru8
9dZbNm/+LRmveNw011xmpfCFtABwh37dAiBxJsgeNTV2wo5/T2MA2JLAjoCzV11PA+z6set+Pwn/
DEjZ61qO+BLICnYtG/w1ACxgHhc8Wcjx3uj+/fvtD8VtHDfrMF8GgCfxX/7lX/4gOHiiWwCLn8cZ
AEcszJz7imwV4CsLJS77emUQ5SvFQpCv3MbJg6/OOhYkPAdZSHM/zrZMw8Kd63lvk+mY3tnGyctz
vZMv9+kcu5OXk87ZL1+5L891lPMdeCwsSHnrgoaH1y/zYZ4yAAsLfxeeBwx8fGWgYtm2EPD3ZEWI
BpK3hBgo5ypPnzeOAeD16JzDznnvnOvOOczzkp/z/OUyt3HOaabjZ97XonNNMA8aCBoBp88A0zrb
OMvMm8sLbgD4R+CB+sTbAPRUm+rzX7huA1za9nQGYLzX5PF/A0Otrub+vb8wpaX7Yo83tf5T37iW
971u3Emqa9nwJAaAjvFR0KGxMHY6m/hivgwATwaeCI/qKcsfmkZBLF78NQDzLRYsDLje++V7rncK
tYUWCzteC84jVM7xcb0MwMLCsoh/fwawFwEDJn/3hcQxAN7n5XyIf1t+R8YK3u7id/WVjtfighsA
NtuwadAn3gaAwXL3T10D+iTtfjoDcHPWda+/Ph2ovASc/Nz9gaE8Bgh5D7g2YYyB2c/QgwD6vA3A
4wLsfBkAFng0AI9y2cyTTUli8eLLAPDi5kXOgCf5FgtKGiUZADGf0AAwMPs6B1+UWBFnXFpQA8Cm
uDmdn7cBIKkmCLMnP4M/h/YlvB0Q6tGxzxNOJuQMBOTA5/6zQlyTB13yGPynq8LVItBW7OobMP2g
AH2UAWCB8aQGgIXxo3geBsBXR0MaAG73KAPAH5r30sTixZcB4P1V3p6iYZXmFu8pe7eQyQCI5wnP
Mz7y533uvUgxJrGfxcvbAkCG21yT/hz4pevxPcIOezQFvuA9/jzXaH734SOFfPb/zDJz5BfcKw1X
zBdni0GKCfScH8CDRxkAFhjs7ER4T38hDABvH7AmP5d5Yo9QX0Ms+2MA1AKw+PFlAHgB8/fn7yv5
Fv8+3n83IgMgnic8l17Wa9G79cthXgzAE/UBcOD8AB//IyDZ3WGvIhbY+JfAzRnXewd27lv9v7tq
9J5wmmA+UXDkdw+PCsjR/0I/BPaZ2n/MBvdKF48yAOyhSZGFMgCEPTpZq/OGhROfKPBVkPnbAqA+
AIsbXwZAPD0yACLQmRcDwEA451MA0RuBCHenPE/43P47fwAkulsApqdcrQK8FcCBe9hX4PoEEP57
YP8vgdtej2a0mQD9zT81kfjfmXQPet5bIr8FPvoj1wiBHnAwFD6j6Q0NDB8n4j0UwpaAxz1Dz+Z5
3jZ4FAz+fKzjUdCUsCczC3tPaB5oRHxBA8ABIR5lAPQUwOJHBuD5IgMgAp15MQCPHAeA9+fPLHW/
8YBj+q/+18YA7HSvMHSWu4buPfyG2cYE8X0/d9XkecvAm/EeYMW/AA6atN6kmyD/yR+75gjwgE3i
7733nn32mIGZz0HzmXrOsudZ46cBYFDmc8dM54gBnY88EdbcH9cCwEdiOPAJB7jwzscxTLwNQFPC
R5n4OAufp+ZAQnw+lE05vqAB4GOIjzIADByPe5RRvNz4MgB8z5737Aks+Rb/Pp6P4zrIAIhAZ14M
wCNHAhw1gc6jJ/5DsOmen3tydQyoSwWqE4CGTGBmjguU0wTztsCAjxnvpoaNK8k1V/zD2zojR3Fg
BoojkbFVgAHVE7YIcOARBmQnLcXnXJ3AzTSPKzxYGHlu74h5e/+9OJgFxxGgOeAxcVSqueAPyL4B
NA9zwUChkQAXN74MAM8T9rlh65M0t9QJUIgfMi8G4JFzAYgXgm4BLH58GQC2Ovn7GCDT8ZE49s/x
Zxu2OPGV27BjqrONk4/nOk9xHc2uMxiJr8+5Pc9J1s657JmO2zrr+Lm/xzuXmBdNgB4DFOJh5sUA
8AkAXnTi5YE/NI2ZWLz4MgAMbM6AN48TW5l4bXIsCS4zsLK1i58xWHOZ6ykucxQ1PtLL1i12IOU1
zXQU90mTzzwYpJ11zIvvOTSpMxwv82IgdgI603IfHAedcw9wH/ychoOfsxMs1zFvtm7wlqKTD18d
Pcn35iNRMgBCPMy8GIBHPgYoXggcIU2PAS5untUAOLegOHQoL3wGRfZHYaDljGMcR53pGKjZ34UT
9zB4ch/cjp8xHZ915u0w9mehCWDHVQZyBnbmxXzYJ4bjZ/B2IG9xMYizTODwrFzH8c4//vhjexuN
fVO4T96C4+cc1pp5MBj/6Ec/sh1gaUI40xlbsSiOtU5D4vn95pIMgBC+mRcD8MiBgMQLgT80p4oV
i5fnYQAYRNmplLVtPrrKwa7Y+ZVBmlOWci4L9jthx1cGeAZ0GkdOEMT+Mpx8hDORcaYzTrrDDrSc
QIVPwXBscpoATmPK658BlvtiXnxl3pzRjI/ecvIszmLJdTQP7O/y29/+1nbA5SOtziyGnAqWBoDb
vPPOO3YsDKZjvxgem6/v6S0ZACF8oxaAAIEFvloAFjfPagDYhM5A7zyyymDKmjaDOZ9+4ZSjDN4M
2KzVc0ZB1sw5VSvTcFvONMZpgGkCWItnkOZ4GQzknPSF9/WZlk+v8BYA8+P2zJviMtMyDWv8zIPH
QANAQ8COqjQU3AenOuWMmkzDGTl5y4DHwJkEGax1C0CIZ2NeDACb61jYiJcHFnYaCGhx86wGgDVm
BlgGWtaqGYA5/SpbhhiYGXhZ+2dfEa5nkGaNnsGTtX/W8GkiaQ54n55T83I9a+dsIaBZYLM8WwAZ
7Gkq+JQCjQa3obh/ztTGWwgcopTruD+agjfffNPenqCR4DreDuD2fOX85h988IE1BrwNwePy9R19
SQZACN/MiwHgPT0+384eynyenvcMKS5zHZv8WOjwQmZQKigosNvwYuf9PRZqLGg4uQLT8JXveRGz
EKLYyuArDbdlHs4Y6cyb+2Aa7pP7ZuHiz3GxgHrS4+Kydxrmy/yZB/N61HFxPQtJf4+LtSx/josF
PPcvFi/PagCYjp3tWEtnEz2DqNPTn+aAy04PfC5TzjZMz/VMR3GZHfa4nttQDLRMTyPACgA/Z1rP
zntOXty3kx/3Q0PC+dt5nrK/ipPO2Yb9CWgS2H+A+/L3O1MyAEL4Zl4MAJ9H54U0PT1td8Blistc
x+fvvV95ITppuDxXGn7uTxrmNVcavjppAuG4nH2Kxc2zGoCXVTx+mgTHmPj6PvyMohl40u8rAyCE
bxgfnrsBEEI8f+YyAKxxMzBKvsWWBhkAIX6IDIAQiwRfBoC3injLiLfEJN/i7TLeBuPfzxMZABHo
yAAIsUjwZQAYxHi7hxey5Fv8+/gaSlsGQAQ6vD5kAIRYBPgyAOLpkQEQgY4MgBCLBBmA58uTGgDv
WwhCLHZkAIRYJDAAsSc8Z7WTnl0M/p4B35cB4OO3HKuAsD8B4bTb/B2cZQfP2wy87cD8CPflwCGV
nTEOiPcU3uyo6GwnxHwjAyDEIoKBha0A0rOLQdyz8PNlADh2xqlTp+yjzRytkNtxPAIucx4EDpfM
DoYcpZCDJ3GMDo5BsmrVKvt0BudU+PLLL+24B4TLu3btsmaBeXO0w5CQEDveB00B89IoqmKhWBAD
QFdL98zHcTzxdr+EBRwHt/GXR82T7wkH2GGTHy/gufB06o9K5wlrEc7jRd7beOYnhHi5mcsAcK4E
wuGPORDR0aNH7XsOU/zdd9/Z8oojH3KWRY6KyJkQ+Z6vDPAc3dAZGZWTJNFAcJAkDrm8efNmuz3z
5rYqM8RCMu8GgAGSFxBdNIfxpAngyHa80DjhB4cQJWxqY9MYR/nihUFaW1vtReQEWAZxjo7nBFqO
GPb111/b7QhHFWPeU1NTdhtekNyG8IJk3nTohC6bI+nR2fMip0Pn0Ki8QHlxOiaE6Zxj4Hfh88R8
rMiB45Rz6FPmw30TOn/mzc/o9nmcTg1ACPFy4ssA8PpnrZ0jm3IeAhaYnIuA8x/wumfgZpnAqZMZ
5Dm7Ik0CJzTiGA0sE2gUnL4GnP2Q6zniIcsnloEstzgEM9ezAsTthVgI5t0AMOCyucyBwZNBn2Zg
48aNNkAyoDMNJ/zgLF8cFpQjeHH4T14wFO+dceKRt99+214whBckDQEvTl647733nl3mxcmmN7pz
LnNiEjbR0XwwKPOVeXMmM16gHNOcx8QLmxcuRw7jdgzkTMf90BwEBQVZx85XBnjCZc59QAPAZZoH
znTG+4Z0/lxmQcHxz4UQLy++DADx7izIvhhOOrZA8nNPmI9nyyTLN+8OhM575sO0LOMI1/tqGRVi
Pph3A8AAzdq/A8eo59SgdNVsGWCgZw2Zs4xxelG6ZQZm3jLg1KWETWZ02EzvrGOg5eQg3O6LL76w
6xnACe+pcSIS7ptNalxPA8CAziDN1gaaDELXzX1y7nOaB6eFgIaA9+VoJAjzYL48Vt6nc9Y7QZ+w
5YKFAYM9J0nhhCe8H0hoEIQQLy9zGQAhXlXm3QDwoqK7PX78uA3WDO6sVbP2z9YABmrWuBlwORe4
U+NnkzknB2GNna0CHO2Mc4MzDwZZtggwwHI9xTzZIYcBmcGZn3/++ee2Fs7mfJoQthzQCLCpjqaC
edM4cBtOfUrTwftwbIKjQeAtAzbR8dhZo+ex87h4y4CtCoTHzcDPfJgfAz2PkcsM/jQOnJyHxyOE
eHmRARCBxrwbAIe2trb7j85wwg/nvr7TnM9mMt7/Yo3dOSCm53aEQZ01dTbBOx36PGEzO28nsDme
TWgMuDQS7KlLeHGzeY2vhP0E2CJAWIN38uPMZPyjOM1wTOccA4+ZefDV+ZzNd9wnTQzX0wAwvZMf
82bzoffxCiFeLmQARKCxYAbgWWEQZQcb1sS976cRBmR2GnRgcHd63gohxOOQARCBxqIxAEIIMZ94
G4BrptLR2zeA/oEhSXolxPP5+vS0+wyXARBCCIu3AWhr70JXdy/GxiYk6ZVQZ2cPOjq73Wf4PBsA
Zs5mefa6fxaxU15zc7PPzyRJkp5GLJucPkHE2wB0dvVidkZ9d8Srw/Xr0+jucfV9I/NqANgz/623
3sKKFStsD/+nEXvn83n+r776yi77SiO93NLvtji1EL/bizo3OFTvG2+8Ycf3cPBlAK5de/D8vxCL
nStXri6cAeDoe87jcs8CL0z2tBeLE1+dNsXLj/OkznyyEPuYCz5ezMHFHGQAxKvOghqAbdu2ITEx
0f3u6eGjdhw2Uyw++FinHoFcnEx7dBaaLxZiH3ORnJxsx/ZwkAEQrzoLbgA4WM+zwkcA2QfgYe6Z
wuPRgeXKSBda+0YwM30V12d9f0lPrl15cPGL5wMfz/QcFpWMD/ais9c1/sMPuHkVzbVd7jfiRcLr
znMEy5mrE+hsb8PIZd8TcI32taBjaMr97mHaq5sx7TUYJvP2HGKX3Lgygq6+Ife758NAUytGL/9w
il2O1ikDIAKJV8YATLVl4q2//wJ9M/cwMzGGmppqTM7cxV0T7Btqq9A/MYPeinicSitFe0MJGvon
cevqCCorajBlvnS3ya97aAI3Jjuwb8tOpGYlIrOgHnemJ+wIhdfvwJVXXTWGr/g346D4Id4G4MZo
HTau+Ba7dm5HTHoZ+jra0do5gNu3riDYnC+puXk4tvEIKhqbcFOjJ79QHjYANxG2fhW2HwxFVlk9
Lt+4gzs3Z3Dn7h1zLdWiqWMQZRmncSGvDjPXpnH7zi1MXzcFy51pVNdkYc/qEEzevouO9lZcueHK
09sA3L0ygB1bViPoRLQxGZPW4N8yQXlm5iYujwygqq4ODON3p8fR2uWaWXS0tx2dg6O4OjGA2up6
sCyaHO5Gz5gr3+bGGhxYvQ+NvVcwZNIOTT2oNMgAiEDjlTEAOZfO2CF4kwvLcGbbDuw6sA+RF6Jx
/mAQduzeg6Dgs6gsScelgho0lqaisLYR5w/vQXBEDAbGhnBw5ef45ZufITErHWu+/Bq7d2/D0SNn
cCoiHIcP7sMJk1fE3oNYtXwZtuw6hasKRk+FtwGYHijFlk0bcOLYEZyKS0X0wY14/Rdv4nRaDrZ8
8zki45PM60qsWbMakUk17q3Ei+BhA3ADh779AlsOhqO9tRWhh7YhJDIetSXZ2LjeGDdjnqvy45FU
WoLk0AT0jfQg6UQ8EmLOYMuOrfh+TRAS4k7i7372Y6w+GAHXOJoPG4B7M1M4HrwbZy9loqW8CEnx
ZeioLkViVDwObtyKvUH7cTE6Hge2LMfPXv8VLiYnY9PKpUgtKsOmJV9gb3AM+tor8enbb+J33y5H
Qnw8du/bhdVLtiMxIQbv/uaXeGfpOoy4T0cZABFovBIG4MblNnz54fvYuHEtfr90FfZvD0dndwdO
h23Hwe2hqG3uRlToQcQnxSA2rwoVOdGITbiE77ccAO84DjcUYdv23Vj13Zc4m5yLxOgLaGqqxpHV
G7HpWBQujw3gaNAG7N9yBj0jQ8ZgHMewpul+KrwNwIwxAF9/+A4upuZierQTe83vsG3jd9h/OtmY
umjUm9rkmSMJGOisQXhQknsr8SJ42ABM4/DyNUiv6MHlq5PY9dHf4aP1EUiPCceRuAqbojztDOKK
i3BudzBy83MRunk/Nu05iKq2NpzeeRjrNq7E9/tPIL2oyoT+H7YA3Jm9ioH+DgTvWIkdu/bg7MlE
pF44j/DQ0wg7cgE93XU4tPk7fPjFcpy/GIWy/AxEnnJNDlaSmYj92w7i+JHd+GzJZsQlpSBo504k
VDYh9fhJbN60Dl+v3Y24lCxcd/c79McAzM7+8NaBEIuV6emZxW8AxjrKjetn7fAeCtKisOK9pVi/
bStyqtsQYwqOpStX40JqFcYHWk3h04fe1kq0DY6jKC4cu/YHo7WtFWdOHML2oOPo7htFSnQYzsQk
obqs0ZiFRGzZshm51S1oNPsYnhhHeUYJrs3xHcWj8TYAs+PtyCsosct3Z64gOjLY1NIOoKKxH1U5
sQi/cAlVJa0YH+5GWdHDrT5iYXnYANxFekQwdu49iPPmmi6uqUBBbhYaa2pxcNv3OJdchp6OOrQM
jKEx9yLWb9qKxLQatFZlYuvWbYhOKMRAVwMOHziK3ErXEz0/NABTiAk9jN1HIjA0PICosP3Ysj0Y
5aUl2PnVcmzctQu1HaOozYnHsROR6OjsQlVlPe7dmUbCuWPYtvcw2rr6ER95DJGxeRjurMfeXVtw
LMIYyv5unAk5hKjkEvNNXDzOAHR09qCpuQ09vf2S9EqosanVDm7lsIg7ATrcQ0NRnbtJEWgursGU
7+8jXgC+OgGKxcHDBuD5420A5uTWZVQXP38z+DgDwHN3cuoypiTpFRHPZ89Hb+fVAHAcAD5q86zw
AJ0Z+cTi40U+6y2enrkKhufJQuxjLjgOwKMMgBCvOvNqADgSIOfj5/S9ubm5T62srCzbkuDrM+nl
Vk5Ojv39fH0mvdxaiN/tRZ0bRUVF2Llzp51h1EEGQAQa82oA9u/fj+3bt+Ps2bM4derUM+n06dM+
10uSJD2poqKi7DDEFy9edJdWMgAi8JhXA7Bv3z7s2rXLXmQcclOSJOllEOcA4HwAMgAikJEBkCQp
4CQDIIQMgCRJASgZACFkACRJCkA9iQHwfhTSc3IrfyYz0myYwhfOeeXP+THXhGqTk5OYmJhwv3ty
ZAAkSQo4+WsAhoeHbWfm9PR0+1lkZKTt2NzZ2WkfI+Rw5PHx8fjggw9ses5++dvf/hZDQ64JjeLi
4nD06FFMTU3ZzxxY6DoFt7Pes5Dnvi5ffviZbfFqwPElzp07h5MnT6Kvrw9dXV3IzMxESkqK/Zzn
oQPPg4iICHvOjYyM2PPIGVeFr8ePH0dGRoY1ExTNhOf2j0MGQJKkgJO/BqC7u9sG8PHxcVtoFxYW
2oDN7WJiYmyakpIS/PrXv0ZFRcX9ZRoEwkK+qqrKBvMVK1YgJCQE2dnZWL58OZYtW2YDAMciaGho
wEcffWQfT2QaDqLGoMAanni1YMBl4G5sbLS/O88HBvivv/7aPhbL86C6utqm5dNvPCd4ztXU1FjD
yfOR2zKPr776yj7WevDgQWzYsOG+ofAXGQBJkgJO/hoAFo6lpaW2Js9HB1kYs5blaQBYgIeHhyM4
ONgWyhQLdjIwMIATJ07Y8TDeeecduw1rdKztsQXg97//vTUNHI+AjyVyX1u2bMHg4BzTZYtFD2vq
NJY8DxITE20LEs+PlpYWBAUFYdOmTairq7NpaQCKi4vtMs8rmkmOiXP48GE7kiVNAU3mp59+irCw
sIdamfxBBkCSpICTvwaAQfrIkSO2kOZnHEOAtXPW8FNTU+0yjQEDN6cRr62ttbU4pxbGNKydsXDn
7QMaiby8PJuOcB37EfT392Pv3r22gGcaFsrt7e33byWIVwfe1uFvHBoaas8Zng+81cTzjIPmHThw
AB0drvkyeM4xwHNQPRpFfkYjwPOLxnLlypX3TQFbqHp7e6258BcZAEmSAk5P0gnQu1blObfFk3QC
ZM3vUem5f8/CmIHiSWt0YvHgdAJ0YN8AwvPLu++Hc87xHHHOJ7569hvhvBo8X57knJEBkCQp4PQk
BkCIVxUZAEmSAk4yAELIAEiSFICSARBCBkCSpACUDIAQMgCSJAWg/DEA165dR09vP/r7ByXpqdTX
N4AbHgGWHf36uN4r3UKJ5/P16w86osoASJIUcPLHALS1d6Gnpx8TExxuVZKeXM0tfJRzxH1GAWNj
E2hsasW4j7QLoa7uXnR0PnhMUAZAkqSAkz8GoLOrFzMzvsdgF8IfRsfGMTw86n7nMgCehmChYe2/
u6fP/U4GQJKkAJS/BoC3AYR4WoZM8Pc2AAMDL25wpytXrsoASJIU2JIBEAuBDIAMgCRJL5lkAMRC
IAMgAyBJ0ksmGQCxEMgAyABIkvSSSQZALAQyADIAkiS9ZJIBEAuBDIAMgCRJL5n8NQCzszfc74R4
ckZNwPd87G909OHHAhea6ekZGQBJkgJb/hiAjs4eNDW12gJTkp5GNbWNNug7TE5OobqmwWfahVBD
Y4t9dZABkCQp4OSPAeCc7JcvX5Gkp9YVE2Cd+fvJvXv3TNC95jPtQonntYMMgCRJASd/DIAQrzoy
AJIkBZxkAISQAZAkKQAlAyCEDIAkSQEoGQAhZAAkSQpAyQAIIQMgSVIASgZACBkASZICUDIAQsgA
SJIUgPLXALCAPHnyJNLT0+0z3L5oa2tDQkKC+51/zMzMIC4uDpOTk+41T0dfXx8iIiJQUlJi33d1
dT303LkvJiYmMDr64kajEy8PMgCSJAWc/DUADKwHDx5EZGQkcnNzERMTg3PnzmF2dhaNjY04duwY
ioqK7GtLSws6Oztx+vRpVFZW4vr164iPj8eBAwfQ09Njt71y5YrNl8Gf69vb29HR0YGjR49ibGwM
9fX1Ng1fm5ubceLECdTW1loDEhsbawvrqKgom5bwu4SFhdnvU1BQgIyMDExPTyMxMdGu4/FwXzyW
srIye2z79+/HBx98YM0DzU1FRQXGx8dx4cIFW2bfuXPn/v77+/vtfsSriQyAJEkBJ38NQE1NDT77
7DMEBwfbmj6D7XvvvYdTp04hKCjI1qRbW1vxk5/8xBoCBsy1a9fi/fffR3Z2NjZs2ICQkBAcPnwY
v/nNb5CZmWnzZc2frQZMz3KShuH48ePWbAwPD9vlQ4cO2ffl5eV2X1NTUzhz5gxef/11awYIj5/G
g7V6pqcR4fbcP83FmjVr8O677yItLc0aDu6X2zDY0xjQ1NBkUBs3brQGgsfK78u0cwUH8WogAyBJ
UsDpSVoAGDhZq2ZA3Lt3L3bs2GGb3Rk0s7KybA2dJiE/P9+mZw37yy+/tLXoFStW2HVsCdizZ49t
CSA0E3yflJRkgzrFoExTwAC8bNkyu4618N7eXmzfvt0agdTUVGzbts0GfRIdHW2Pia0SdXV11jAw
PV/JkSNHEB4ejoGBAbs/mhKaGq7j34Dfg6aGrQpsZSDr169HVVWVbYlgy4B4dZEBkCQp4OSvAWAB
6RkEu7u7baC8fPmyrZEnJyfb2jfNwdCQa5rXvLw8Kwbkt99+2+6HTfbcjoGYcF+FhYV2mftkPiyI
2fzO9WwZYOsC909oMpz0DOJs2ifcN02BYwi4HfN29sNbFaz908AMDg7atIQBntsyL94KYJ8Efk8e
J29HsL+D+gq8+sgASJIUcPLXADwLDLrV1dU2wC4WGAwY+EVgIAMgSVLAaSEMgBAvOzIAkiQFnGQA
hJABkCQpACUDIBYzM9PTmJ6ewczNe5i9eRezN267dPO2XedLszfv2IDvOU6EDIAkSQEnfwwAO8LN
mnWzs5L04uUZqJvbetBWmYzZ2D/HbPT/gmvR/xzXo//c6M9w4+I/w82Y/8lD/ww3LvwZLhcsQVlN
q8lr1p2LDIAkSQEofwxAd08f6hua0d7RJUkvXNU1DRifcI0c2dIxgM6KaCD0NQyd/wt0VCVhoD4B
XeVnMHHqTzAb/p9j5sQ/sJoO/we4F/IaZjN+ior6HhkASZICW/4YgI7OHszMPCgshXiRjIyOY2ho
xC7TAHRVRuNW2H+G1tJoDE3dw8jENQyOXkVHWxNaG8rR0lCB5vpyY2Kb0Bn9d5hN/xtjALplACRJ
Cmz5YwA6u3rN++vud0K8WIaGRzFsRGgAuiujcCPsNdQVXkRTaw+amppcamk36rivho5xtMV9gJtp
/0kGQJIkSQZALDa8DUBvxRm0RfwbO8pkalqGHeQpJSXFji7JESU51DPP73NRlxB37DuMp7+D6voO
GQBJkgJbMgBisfFDAxCJyojXEX0pw5oAntOccIrDOp89e9bOV8Ehn4OPheH4gXUYSPs9aurbZAAk
SQpsyQCIxYa3AegzBqAx/C9x+nwcLlyIsuc1Az9nfHSCPyeVOhIShpMHlmE47SNjANplACRJCmzJ
AIjFhrcB6K88jbawf4WQsLM4eTIC4SdOIizMBP3QMBw7dhzBIccQHByCoOATiDz4HUbT30e1DIAk
SYEuGQCx2PA2AANVZ9B17J9gx94Q7N4fbHTEp3bsD8PJ3R9jMv236gMgSZLkrwHgaGtCvAwMj4w9
ZAC6KmNw8+R/if5j/x36jv8J+kL/e5/qPf6nGAv+bzCd9Ws9BSBJkuSPAWhr77K1ruvXpyXphauj
sxuD98cBGHQNBBT2mkvhjxEHAkr/Ww0EJEmS5I8BmJicQltbp20JkKQXLRrS6RlXi1Rzayda6wrs
8L5T+X4odwnGa0+ivLoBM+48iAyAJEkBJ38MgBAvK11dnSgpq0BlYx8qG/wQ09W1oaK8DLdu3XLn
IgMgSVIASgZALHY4q9+dO3fsqz9iWk5w5YkMgCRJAScZACFkACRJCkDJAAghAyBJUgBKBkAIGQBJ
kgJQMgBCyABIkhSAkgEQQgZAkqQAlAyAEDIAkiQFoPw1AHxm2nPglLkYHx9HXV2dLVCvX7+O4eFh
1NTUuD99AEdhGxsbs8syG+JFIwMgSVLAyV8DUF5ejnPnztnliYkJFBUV2WUG8tLSUnR1ddn333//
PYKCguz76upqVFVVISQkxH7GdXwGm2RlZeGnP/0pRkZGcOLECfT29qK2ttY+p02j0dTUhPb2divC
fU5OTtrPuCzE80QGQJKkgJO/BqCkpOS+ATh8+DCOHj2KzMxMJCcn46OPPkJkZKT9bM2aNTh48CAa
GxvtfOzNzc2IiYmxAf1nP/uZDfaEBuLrr7+287VHRUVZo/D+++9bs8A0a9euxd69e7Fjxw6bdsmS
Jfj0008xMDCAoaEhm4cQzwsZAEmSAk7+GgAG4QMHDmBqasoGZtbWGagTEhLse2dY1S1bttimfdbs
mb6hocEGeNb4V69ejYqKCpsuJSUFsbGxdt3WrVvt+2PHjtljoQno7Oy05oDifpYtW2aNBAtpthII
8TyRAZAkKeDkrwFgQGdwT0tLQ1lZmQ36LDTZGsCaeU5Ojk2Xm5trt5+enkZxcbHdjrV7Nt0zkDu3
DlpbW22zf0FBAS5cuGD7CjDw0xSwzwBNRGVlpTUMNAPcJ1sg+vr60N3dbfMQ4nkhAyBJUsDJXwMw
FwzYDOwKymIxIwMgSVLA6VkNgBCvAjIAkiQFnGQAhJABkCQpACUDIBYz9+7dBSf25cOl/oph+t5d
Lj1g3g0Ae8QmJiYiLi5OkiTppVBqairWr18vAyAWJZ3d/ehqLsW14mWYLvwKM3nvu5T/IaaLv8X1
4qVGS+7rWsFSTDWcQn1Thz3PHebVAGzevBkffPABNmzYYJ9vlSRJehnEsulXv/rV/Wf8ibcBGB0b
R1NzG9rbuyTphaupudWcn9ftudncPoCO8gvA8ddwJfwP0Zf0AUbTP8RQ4m8wG/wacNRLQa9hJu3H
KKvrtoNYOcyrAeCgGHzURZIk6WUUB9hx8DYAbabQHR+fMOtvStILV3dPPwYHR+y52dIxgK7Ki7gT
9hra8g6jdxIYmrqL3pFZdJSdRVfBfnTmH0JH/kG05IVg6Mz/hdmMn6KifgENgBBCLBa8DUBnVy+u
X592vxPixTI8Mobh4VG7TAPQXRmFm8YANJclortv1A45TXX0jKC1ewxtVM8Ymvtvoz3+Y9xM+48y
AEII4QtfBsBpchXiRTNkgr+nAeipPIehE3+KjOQo5OQX2cGoKA5OlZ2dbUehzMjIQEpGAfIiPsXV
9F+hsr5TBkAIIbyRARAvM94GoLfiFCpOvYnoS5mIj4+34gBVHIKafVuc4aSDj4Xh+IH1GEj7PWrq
216MAbh3jw8tPB6Orc2pNYUQYiGRARAvM94GoK8iEvUnfoRz0Ym4eDEG0dHRtl8Lgz8npDp58iTC
wsJw9Fg4ThxYgeG0j40BaF94A8BxsHfv3m3dCHfO8bIJZ9XieNmE02Uy+I+OjmL//v12HSe/8Lwg
Oa727du370+KweXjx4/bcbcdmIbzcrMZhPviMvHOi+89v7jzGQsBuijCcblbWlrsMo+N+fGxIc+O
Q0KIVwMZAPEy420A+itPozXs/0BYxAUb8Fnjj4iIsHGWgZ+TTHGeiaDgcJw6uASj6R+geqENAGfP
Cg0NtQG0v7/fTq/JaTN5r+Kbb77BV199ZQ+CX4AHzPR8vXz5sp1fe8+ePXZObk6ryeWPP/4YPT09
Nm9OqLFz507rfJg/8+C4A59//rmdYpPBmwN+eObFCTf4HDCfAabR4LzbHBiERoImhAaCs3QR7pMm
hcfNbfns8C9/+UuEh4ejsLDQzvsthHg1kAEQLzPeBmCg6jTaj/+v2H7wLPYERWL34QjsPhSBXYdO
YtfBB9p+8BxC936L8fS3jQHoWFgDwADKZgkHBmW6FM6fzYDNIMuLzhmZi80WDOgMrgzM5NChQ3Y9
zQMDPIM9D3rFihU2HccZ4AxcDPKE02eyAwQvaM7fzVYGJy+mYR6clYsmhPvi8TCg0wCwdcJpgWDe
bE5pa2uzx8AWAebH4+UfkfkLIV4NZADEy8wP+gBUReFy2B8g+9B/QlbQ3yA76K+tcsyypzKDfoqq
g/8C1zLfQGV918IaADaXswWgtLTU9kxkkwQDNmvyHCGQTeqc9pI1+d/97ne2ds2mDAZdBmpuxyYN
BuM33njD1t5Jeno6Nm3aZJs6GJx37Nhhp+hkUI+MjLT75LSbR44cscHeyYt587OJiQk7F3dSUpI1
FjQTnJqT5uK7776zabkvmhQWDGwhOHv2rM2bn/HWAo9RCPFq4G0A2jt69BigeGmgARgacsYBGERn
RQxw4jWXTj5Gx1/DTMbPUFHfs7AGgAwNDdlAyr4AvMDYlM6mft7DZxBm0OW81zQInPeahoCdBvPz
8+12V65csUaB5oDzcXOu7ObmZltjd2CQ58BDDNJsxmcfAObjnRe/MKfw5MXOvgM0KDQibCVwOiry
mJiW27BDIvslsAXh+vXr9licvHlrQAjxauBtAPr6B1Hf0GwHBJKkF62a2kZMTl2252ZLRx+66tJx
J+Ff4na8EV8fpdh/ieulK1C10LcAnhcNDQ22+Z79A2gohBDieeJtAAgrGbdvS9KLl9P5nbSYCnBR
cQmq65pRVdvkl6prG1BYWGDPc4dFYwCEEGI+8WUAhHgZYS2erdMTE5N+i8Nas0O8JzIAQghhkAEQ
gYYMgBBCGGQARKAx7waAHevY2Y/30iRJkl4GsUzyRgZABBrzagD4fD0H5Pnyyy/t4DyS5OiLL77w
uV5anFpsvycHIHvrrbfsY8MOMgAi0JhXA8Dn9Pk4HTsrsOf+04jP5nOKQz6rz8f2fKWRFp84RoOv
9dLi0+Dg4KL7PTkOCMf04GPDDjIAItCYVwOwbds2O9DOs8ILU4PuvFrwNxWvDovx9+R4JJ6jlMoA
iEBj3g1AQkKC+93TwwF4OPCPeHXgb+rvDJHkSdJ6cu/WDCbGr7rfifmAzyfz91xssHLirwHw5/zj
38FzYrJH4flMNwcXo4RYaBatAZgdrsK6NXsw6R4M8Lq5cC8PtiEtNRvdHbWorueEQXcxPT3jSmC4
edNVS0kL3YtjsYUYbWtGaVkHbszO4OatB1/i1m1Xprfvui76O7dv4unCj5iLhwzA3VmkXgzF1r1H
0TXB3+surl4zn/Oze7fN73MVpeVFuHKLH93G7K3buHttCKlJWRgZbMHOdauxadcB1HeN4sbMDOxP
ee8a0uOT0FhbiTNHLuGG2UbMD74MwL1r7di4eit6Lrt+45vuFgK+3vIIfg63b/HHNa933L+T+d1v
u5Pdu3MLt00204PNyMgtQVNJMjZtD8Ply2PISy3HLXNdz954UIj5zMvHBeyvAeA8I5s3b7a3ITlX
CDsR8tzlLQQ+j82RR52OhRySnPBzzxHXWMg62+3bt88OLc5RTzkqKedL4VwoxLkmODqqEPPNojUA
tblxWLViLUrbhlAcE44te0KQGReBd3/zDtatXonoS3mIP3McG9etQ3ppDWKDj2Dpku9wJr0ESQc3
4433liAqMhbZGRVICNuFzz7+FkVdfUg6EYTVy1dg88a12LX/DNpb67Dyq0+wPugkrimGPDceMgC3
L2P/9rUIjs7C5OVxnDm4E3uCTqOjsQJrVy5DXnUTcgqy0FRfg33rNmDbgSBjGE7j7d+9h/OxkTh0
NBTR4Ydw7Hwizh/YjM++Xoe80nz8/s2/R+iFWGz4/TdYsXY98ptcE2mI54svA9BWno615jrKqe9F
7vnD2Hw0EuVFudi+Zg2Wrd2BS1H5GJ4YQmFiLjKSo7Huu6X4ftN6bNy4Hw2tHQjetgJfb9uDoqwM
bFq6BFsPhCI5KhTvffgFoiJC8eZf/z0ioi8h8UIuqrIuYNkXn+BcQZ1ZjsOaH+S1Ep+u/h4DUw8C
MvHHAHDODwZrBnkOG86ZTDlvCIcD/8lPfoKMjAwEBwdjyZIldmIzjlbKPDhHCec34a3LtLQ0sCM0
Az3P+U8//dTOb8Lh0Dn8OWc15Wec5ZSdEzksOWctpWEQYj5ZlAbg3u0xrPvmc6xeswrffbMUa3eG
gZfKvZEGRMeloaWyADuWrsWOc1nmG/Zh39412PN9JBpbG3H6cATOnTqNqNOR+OzN9xEXk4vI8BCs
X/k59p6ORtSRKGSkR2Fb+BmUJcRi5bIv8dnyLTgWeQ5XZACeGw8ZAFOrnxrrx9mjO7Dl+7XYHOSa
8GmwPAnBp9iH5A5Ong1HTloqTp0pwkBjGo4cCTIFeAHGByvw8W9+iwOh5zHU2Yrg/Xux6ptPEHwx
A5mXEtDd1YDwo3GoLUjHicg8m694vvzAANydxo4VX2P1WnN9rt+NEyHBaJ+aQemlCCxbsRoJKZk4
vdcYvN4OnDkUjpPBkcg1QXLj4UMoysjB7g0r8O5nSxF8Igxng8MQn1aGnHNRiDobg6z8UjTkp+Hk
kdPY8PVHOHwkAYkxZ7Bj61osNZWAS+HnkZ2a+lBe73y6BEeOHkXbyJMbAM5RwmBOaAD4ZBMnM+Mk
Y5yhlNswmK8zFQ3OFMrPOS8J13FuEr5SNAkchY1/K856WllZaac5ZydpzkRKcT/Lly+3LQ1CLASL
0gCMtOThUNg59HR34KRx3Nu2bMG2fUfM+1YE7duGiMhopF/KxPmTwdi0bi0ScgqRFZWDwbEBZMek
4dKFKLT3jeHQ8q8QHp2G0KO7sc5c1Jcy8pAfX4Tqmnycyy5GU2EW0lNSsGf7dsRlVrn3Lp4HDxmA
m1eRej4MOzZvRVpWDkJ2fY99R8+iobIE2fn8u99GUnoiqgpzserjr/H9jp2oaWxFxJGDOBd7DvEp
xugZpkdaTSDYiNUbNiKvrAUJkUEIORWNvMxa9DZXISOt1qYTzxdvA3C1txIHQ06Y67ELp44Hm1px
JKZu30Lqic1499OvEZqYg4xz4Vi6fBWOHo9CTnI+GqsrEZGciubKMmSkmGvy8D6cjEpDVU4BKmu7
UJudh8riUgQfPYjIiNMoruhFVsQubNl3GjHnj2PT92tw7EI8SpILUF9V8XBeh/bhxJlkTHuVU/4Y
ANbC2VmQTfus7fOpAS6zVs+yjTOGct12U0bExsZa8X4+Az7XcfpztgqsX7/ePn3AvxVNAmlvb7cT
j3GmUwZ9vt+1a5fdhuWdWgDEfLMoDcBd596ew92bGBsZxU1zHLduzOD6jLtH8t0bGBufdC173MW/
H3jc3Jm9isnLXvcwKXey61fGMT7lu3OQeDoeMgCGW9NXMT7h7gh1exojoxP37wG7uIeR5lqkxOVj
6pqrX8fN2eu4Nv1w7/Ob01OYuur6/PatWVxxpxXzh7cBuOsVuO7c4Q95F9lRh7Fs2TLsiUjGTfPT
T16eun+NEdc151px+8Y1jJhr9477cyfdzPQ1TN/wuj9urnOOde5K8uB/J687zGv0QV4OT9IJkDOC
En5XPtbswD4BXMfHComzTxaqU1NTdnnt2rX49ttv7YRmxLv8Ic465sM82X/AVzohnifzagC2bt1q
He6zwg4xdMfi1UGdnF4tFuPvmZ6e7rcBeBYYyH2NPCjEi2ZeDQA7wXAOf94TY7PW04odcThil6/P
pMUp/qa+1j9S5jx61nNJev5i65w/vyd/O3aKexl+Q1YoQkJCEBUV5S6t5s8ACPGyMq8GgI+7sBWA
HV3YYeZZxEdufK2XJEl6Up0/f9723L948aK7tJIBEIHHvBsAdmrhRcYLTpIk6WUQn7tnb3wZALHQ
9A8OY2K4A1d7CzDdl4fZ/hx0dzSjrb3DtkxRbW0dGOsux42BLFwz6SaH29E/MOTOARgZHcPIYA+u
9RXiem8OZrpTMG2Vatbl42pfwcMyeVwZbkRv38BDt+tkACRJCjj5YwA4iNiAKayHhjgHiSQ9nbz7
x1Q09GCwcAcQ+hpuhL+GmO3/H1avWo4VK1dj5cqVRquwfOUa7Fr/MZoO/4lNN5q3CmW1HNzORWNr
L9rKonH3xGuYCfsvMH72z3D5wp9j6uw/w+3jrwGeMtsj5DVcy3gdJdXtdkwLBxkASZICTv4YgLb2
LnR0dmN4ZEySnkoNjS0YHn54ALKa5n6MlWzHnbDXcGrb6/hm5TYsX7EKq1evxpo1a+5r2apNZt1a
tBz4b3G9eBmqGvvdOQAtHQPorLyIe8ZAdCZ/iY6Ba+gfnkRndz/6kj/CaNx/xHDcjzEU+zcYiP0J
rp74R5jN/AUq6rsfGqFSBkCSpICTPwags6vXFJaLb5Ij8fIwOjbh0wBcKd+M/N1/hm9XbcfKVavt
2BI8H9kvZenSpff1zbJ12Ln6HXTm7kFdc5c7B5cB6K6Mwk1jIlorkjE4ehWDg0MYMOroG0dr9xha
qC5jQnpvoi3uQ9xI+ysZAEmSJH8NwLVrD48PIsSTMGSCv7cBqG/uQU/RYexZ+w6+XboGe/bstnNC
xMfH20GlnHOUT6hwGOrvlixFclKCfXrFgQagp/ICrob91yjOPI/yqno7siRVUVFhVU6Z9yWVzai9
8D5m0n8iAyBJkiQDIBYCXwagpbUdRVmxWLXsS6xdtwEdHR3uT34IP/vm22+RkJj0AwPQWxGJmlM/
w8VLqebzRDvoHs/rmJgYax5oJvj0XNiJSEQcXoPh9E9QU98mAyBJUmBLBkAsBL4MAMfBSEvPwJdf
fmUng3oUTMtRJBNNgPdpAE7+DaLiUhEXd8kOQ83zmYNbnTlzBqdOnbLj8AQfC0fYgVUYTPtUBkCS
JEkGQCwEvg1AG7IyUvDdN1+ZAH3ikaNodnZ2zmkA+ioj0Rz+F4g4c9HU9s/ZoM8aP+ea4ARUoaGh
OHbsGIKCwxBxcClG0j5EdX27DIAkSYEtGQCxEPgyAI0tXWjIO4nvV32Kr79bZieUYhBmgOd8EZxF
kuL00hyu+tvvliA+MeUHBqC/6jTaQv8F9gefw9Hjp3DkWASCQk7icPAJHDoajoNHwqz2HYnEif1L
MJb+rgyAJEmSDIBYCHwZgNrmPkyUbceZzf8B367cah//43n4/fff2+mgXWMBrLTn54pVa7Bq+dco
TY9AY/OD+XBsC0DVOQwe/2OE7l2OsP0rEL5/+QMdeKDj+9chfs9PcDnjN6iq75QBkCQpsOWvAdBj
gOJZsI8BDj1sAPgY4FTpFowe/a+wae0yLFm5EStWrLBGwFOrjL5esRXxW/9PXClaieqmPncOLgPQ
WRkLRLwGnDTi66MU+hpmsn6lpwAkSZL8MQDtHd1obe1A/8CgJD2V6uqbMDIy5j6jXNAAjJbusYG5
I+R/wLYNS7F67QasW7fuvtauW2/WbcSFnb/A3bDXcKV4DaoaB9w5uAxAV1UcEGmC+ykjvj5K4cYA
ZL+JyoYeGQBJkgJb/hgAFoxj4xMYn5iUpKfSxOQU7ty54z6jXFRUVqOxphgdlfHorb6I2rIsFBWX
ori42EMl9pVpuqouobm2COUVVe4cgKbmFlRVmM+rEmyax6oiHu31+XY/MgCSJAW0/DEAQswH/f19
diyA1s5BowF7q4kDAflSe1e/TdfS1one3gdzAYyNjaG5pdWdhx/qMmrvQUdHO+7efRCwZQAkSQo4
yQAIIQMgSVIASgZACBkASZICUDIAQsgASJIUgJIBEEIGQJKkAJQMgBALYAB2795tJyng7ESSJEkv
gzhzmjMCm4MMgAg05tUAbNmyxQ5pyAkJjhw5IkmS9FKIs6R98skndspUBxqAK1eu2MekJCkQdPny
5fkzAJzBiC5748aN2LBhgyRJ0kshlkkcfrWq6sHgKhywZXJy0haKkhQImpqaskbAF89sAIQQQgix
+JABEEIIIQIQGQAhAgjeAx8eHsbIyMgrL37PiYkJ9zcXQngjAyBEANHX14eCggLU1dWhpqbmlVZ1
dbWdbGWu+59CBDoyAEIEEP39/WhoaMDg4KBdpiHg69DQkF3mq+d6qre3936N2nO9k9ZTzufj4+P3
83TWe+fNV054MjAwcH+dp7iOnzn5cNk5Dh4TvwPf83WuPGgEvGdqE0K4kAEQIoBgUGTtn8Gyp6fH
qqurC42NjXYdzQFfnQDO2crYkzgvL8+2HHB5dHTUpmlra7NpKAZhpuV6BmM+HcTgy3wormtvb78f
tJ38o6Oj0dTUZJe5joHd2T/Ttba2or6+3jblc3+s0dfW1tr0fF9eXo6WlhabN7d1vpMjtgLIAAjh
GxkAIQIIbwPA9xUVFdi0aZMN7nwtKSnBhQsXUFhYaANvaWkpPvvsM5w5cwaZmZnIzs62Qfl3v/ud
TcMgSzk18VOnTtnxQTg2SEZGhjUD3N/777+P06dPIysryw7SQyPBx/QY0GlAzp07Z9MxmNMYcD80
Ffv370dubi5OnjyJb775Bm+88QZu376N4OBg/PKXv0RISAiSk5OtYZABEMJ/ZACECCB8GQDWotet
W4fr169j+/bt2LNnj32/Y8cOO4oe1y1dutQOrcvPfv7zn+Pw4cN49913ERcXhzfffBPvvffe/bwY
1Bl0aSiOHz+On/3sZ3Y7pqE54AA9P/3pT3H06FE7iiif09+6davdH4M80zBPruMx0QR88MEHtqWA
BuLDDz+0I/3xOX8aDeaRkpJibyfIAAjhPzIAQgQQvgwAAzCDdnNzM77//ntb42bg5yuDK2vyoaGh
tsa9d+9eO/DXtm3bcODAAVszZ0sAx95nnmyyZx5sGUhLS7MBmmk5WihNA28j7Ny5067jPvnKZn3m
mZqaaj+LjIy0nzHw834/gz2PIyYmxs47wpH9aAjYSsHj4T5oKngrw/leMgBCPB4ZACECCG8DQLHp
nkGWgTsnJwdhYWF466237DqmZxM7AzRr9wzCrJmzGZ+1bt4WoFkICgqy9+AZsHnv3xmDn7cM2ILA
5n1uTxPBQM91DOBJSUno6Oiwr2x1oAlhSwBbACIiIuxnTMfRzGgo2KLAfgq8rcAWAb6yZWLNmjX2
c+5fBkAI/5ABECKA8GUAKN4/ZxM6h8llhz8GTgZdpuO9evYF4P19BlguO53/+J7bMg3zYa2d6diJ
j585nfuYhuv56rmOaRzjwHUUAz9bF3gcNCf8jHlzO6cDItc5r5RzfNy/5/eSARBibmQAhAgg5jIA
jhhAGXQp72C6EOI+aURoPp7HMcgACDE3MgBCBBAM/M44AFx+lUWzIwMgxNzIAAgRQLCZnB3xGBjZ
+e9VVmVlpX2EUSMBCuEbGQAhAgjWhq9duxYQunr1KmZnZ93fXAjhjQyAEEIIEYDIAAghhBABiAyA
EEIIEYDIAAghhBABiAyAEEIIEYDIAAghhBABiAyAEEIIEYDIAAghhBABiAyAEEIIEYDIAAghhBAB
iAyAEEIIEYDIAAghhBABiAyAEEIIEYDIAAghhBABiAyAEEIIEYDIAAghhBABiAyAEEIIEYDIAAgh
hBABiAyAEEIIEYDIAAghhBABiAyAEEIIEYDIAAghhBABiAyAEEIIEYDIAAghhBABiAyAEEIIEYDI
AAghhBABiN8G4IYMgBBCCPHK4JcB2Lp9T7LivxBCCPHqUNXQ8XgDsHzl6pzGth7jFpqsY5AkSZIk
afGKwT85LefxBkAIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQwg9ee+3/BzE5
gWubRfuYAAAAAElFTkSuQmCC</Preview>
  <Form>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
PX76gRz8Nyb69e308z8Be5ZgkXe8AAA=</Form>
  <Code><![CDATA[
Function Load-Catalog {
	Param (
		[string]$catalogFile
	)
	
	$btnAppBuild.Enabled = $false
	
	try {
		[xml]$catalog = Get-Content $catalogFile
	} Catch {
		#Add-Type -AssemblyName "System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
		[void][System.Windows.Forms.MessageBox]::Show("Unable to load catalog XML.`r`n`r`n$($_.Exception.Message)", "Error")
	}
	
	$dvCatalog.Rows.Clear()
	$dvActions.Rows.Clear()
	
	Try {
		ForEach ($app in $catalog.NowDeploy.Applications.Application) {
			$newRow = @($($app.'#text'), $app.Path, $app.Exclude, $app.Supersede)
			$dvCatalog.Rows.Add($newRow)
		}
		
		ForEach ($action in $catalog.NowDeploy.Actions.ChildNodes) {
			$newRow = @($action.Name, $action.Script.File, $action.Script.ArgumentName)
			$dvActions.Rows.Add($newRow)
		}
		
		If ($catalog.NowDeploy.Actions.ChildNodes.Name -notcontains "OnComplete") {
			$dvActions.Rows.Add("OnComplete", $null, $null)
		}
		
		$btnAppBuild.Enabled = $true
		$btnDownloadCatalog.Enabled = $true
		$btnSaveCatalogXML.Enabled = $false
		
	} Catch {
		#Add-Type -AssemblyName "System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
		[void][System.Windows.Forms.MessageBox]::Show("Unable to load catalog XML.`r`n`r`n$($_.Exception.Message)", "Error")
	}
	
	$dvCatalog.Sort($dvCatalog.columns[0], 'Ascending')
	
}

$MainForm_Load={
	
	# Gather NowDeploy AppBuild Settings from Registry
	
	$ndUserKeys = Get-ItemProperty "HKCU:\Software\NowDeploy\AppBuilder" -ErrorAction SilentlyContinue
	$ndCompKeys = Get-ItemProperty "HKLM:\Software\NowDeploy\AppBuilder" -ErrorAction SilentlyContinue
	$cmUIKeys = Get-ItemProperty "HKCU:\Software\Microsoft\ConfigMgr10\AdminUI\MRU\1"
	
	# License Key
	
	if ($ndUserKeys.key -and $ndUserKeys.key.Length -ge 5) {
		$txtLicenseKey.Text = $ndUserKeys.key
		$rdoSaveHKCU.Select()
	} elseif ($ndCompKeys.key -and $ndCompKeys.key.Length -ge 5) {
		$txtLicenseKey.Text = $ndCompKeys.key
		$rdoSaveHKLM.Select()
	}
	
	# Package Source
	
	if ($ndUserKeys.packageSource) {
		$txtPackageSource.Text = $ndUserKeys.PackageSource
	} elseif ($ndCompKeys.packageSource) {
		$txtPackageSource.Text = $ndCompKeys.PackageSource
		
	}
	
	# SCCM Server
	
	If ($ndUserKeys.server) {
		$txtServer.Text = $ndUserKeys.Server
	} elseif ($ndCompKeys.server) {
		$txtServer.Text = $ndCompKeys.Server
	} elseif ($cmUIKeys.ServerName) {
		$txtServer.Text =  $cmUIKeys.ServerName
	}
	
	# Site Code
	
	if ($ndUserKeys.SiteCode) {
		$txtSiteCode.Text = $ndUserKeys.SiteCode
	} elseif ($ndCompKeys.Sitecode) {
		$txtSiteCode.Text = $ndCompKeys.Sitecode
	} elseif ($cmUIKeys.SiteCode) {
		$txtSiteCode.Text = $cmUIKeys.SiteCode
	}
	
	# Log File
	
	if ($ndUserKeys.logFileName) {
		$txtLogFile.Text = $ndUserKeys.LogFileName
	} elseif ($ndCompKeys.logFileName) {
		$txtLogFile.Text = $ndCompKeys.LogFilename
	}
	
	# Last Catalog
	
	if ($ndUserKeys.LastCatalog) {
		$txtCatalogFile.Text = $ndUserKeys.LastCatalog
	} elseif ($ndCompKeys.LastCatalog) {
		$txtCatalogFile.Text = $ndCompKeys.LastCatalog
	}
	
	
	$currentPrincipal = New-Object Security.Principal.WindowsPrincipal([Security.Principal.WindowsIdentity]::GetCurrent())
	$administrator = $currentPrincipal.IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)
	
	if (-not ($administrator)) {
		$rdoSaveHKLM.Enabled = $false
		$rdoSaveHKCU.Select()
	}
	
	If ($txtCatalogFile.text -and $(Get-ChildItem $txtCatalogFile.Text -ErrorAction SilentlyContinue)) {
			Load-Catalog $txtCatalogFile.Text
	}
	
	$btnSave.Enabled = $false
	
}

$buttonCallChildForm_Click={
	#TODO: Place custom script here
	if((Show-ChildForm_psf) -eq 'OK')
	{
		
	}
}

$txtLicenseKey_MouseHover={
	# Unhide the License Key
	$txtLicenseKey.PasswordChar = $null
}

$txtLicenseKey_MouseLeave={
	# Hide the License Key
	$txtLicenseKey.PasswordChar = "*"
}


$btnChangePackageSource_Click={
	# Select New Package Source
	$newFolder = $folderBrowser.ShowDialog()
	
	if ($newFolder -eq [System.Windows.Forms.DialogResult]::OK) {
		$txtPackageSource.Text = $folderBrowser.SelectedPath
	}
}

$btnSave_Click={
	# Save Settings to Registry
	
	If ($rdoSaveHKCU.Checked) {
		$rootKey = "HKCU:\Software\NowDeploy\AppBuilder"
	} else {
		$rootKey = "HKLM:\Software\NowDeploy\AppBuilder"
	}
	
	Try {
		New-ItemProperty -Path $rootKey -Name "PackageSource" -Value $txtPackageSource.text -Force
		New-ItemProperty -Path $rootKey -Name "Key" -Value $txtLicenseKey.Text -Force
		New-ItemProperty -Path $rootKey -Name "Server" -Value $txtServer.Text -Force
		New-ItemProperty -Path $rootKey -Name "SiteCode" -Value $txtSiteCode.Text -Force
		New-ItemProperty -Path $rootKey -Name "LogFileName" -Value $txtLogFile.Text -Force
		New-ItemProperty -Path $rootKey -Name "LastCatalog" -Value $txtCatalogFile.Text -Force
		#Add-Type -AssemblyName "System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
		[void][System.Windows.Forms.MessageBox]::Show("Settings Saved to Registry", "Success")
		$btnSave.Enabled = $false
	} Catch {
		#Add-Type -AssemblyName "System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
		[void][System.Windows.Forms.MessageBox]::Show("Failed to write one or more registry values.`r`n`r`n$($_.Exception.Message)", "Error")
	}
	
}

#region Control Helper Functions
function Update-ListBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ListBox or CheckedListBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ListBox control.
	
	.PARAMETER ListBox
		The ListBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ListBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
		
	.PARAMETER ValueMember
		Indicates the property to use for the value of the control.
	
	.PARAMETER Append
		Adds the item(s) to the ListBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ListBox $ListBox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ListBox $listBox1 "Red" -Append
		Update-ListBox $listBox1 "White" -Append
		Update-ListBox $listBox1 "Blue" -Append
	
	.EXAMPLE
		Update-ListBox $listBox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ListBox]
		$ListBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$ListBox.Items.Clear()
	}
	
	if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection] -or $Items -is [System.Collections.ICollection])
	{
		$ListBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ListBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ListBox.Items.Add($obj)
		}
		$ListBox.EndUpdate()
	}
	else
	{
		$ListBox.Items.Add($Items)
	}
	
	$ListBox.DisplayMember = $DisplayMember
	$ListBox.ValueMember = $ValueMember
}

function Update-DataGridView
{
	<#
	.SYNOPSIS
		This functions helps you load items into a DataGridView.

	.DESCRIPTION
		Use this function to dynamically load items into the DataGridView control.

	.PARAMETER  DataGridView
		The DataGridView control you want to add items to.

	.PARAMETER  Item
		The object or objects you wish to load into the DataGridView's items collection.
	
	.PARAMETER  DataMember
		Sets the name of the list or table in the data source for which the DataGridView is displaying data.

	.PARAMETER AutoSizeColumns
	    Resizes DataGridView control's columns after loading the items.
	#>
	Param (
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		[System.Windows.Forms.DataGridView]$DataGridView,
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		$Item,
	    [Parameter(Mandatory=$false)]
		[string]$DataMember,
		[System.Windows.Forms.DataGridViewAutoSizeColumnsMode]$AutoSizeColumns = 'None'
	)
	$DataGridView.SuspendLayout()
	$DataGridView.DataMember = $DataMember
	
	if ($null -eq $Item)
	{
		$DataGridView.DataSource = $null
	}
	elseif ($Item -is [System.Data.DataSet] -and $Item.Tables.Count -gt 0)
	{
		$DataGridView.DataSource = $Item.Tables[0]
	}
	elseif ($Item -is [System.ComponentModel.IListSource]`
	-or $Item -is [System.ComponentModel.IBindingList] -or $Item -is [System.ComponentModel.IBindingListView] )
	{
		$DataGridView.DataSource = $Item
	}
	else
	{
		$array = New-Object System.Collections.ArrayList
		
		if ($Item -is [System.Collections.IList])
		{
			$array.AddRange($Item)
		}
		else
		{
			$array.Add($Item)
		}
		$DataGridView.DataSource = $array
	}
	
	if ($AutoSizeColumns -ne 'None')
	{
		$DataGridView.AutoResizeColumns($AutoSizeColumns)
	}
	
	$DataGridView.ResumeLayout()
}

function ConvertTo-DataTable
{
	<#
		.SYNOPSIS
			Converts objects into a DataTable.
	
		.DESCRIPTION
			Converts objects into a DataTable, which are used for DataBinding.
	
		.PARAMETER  InputObject
			The input to convert into a DataTable.
	
		.PARAMETER  Table
			The DataTable you wish to load the input into.
	
		.PARAMETER RetainColumns
			This switch tells the function to keep the DataTable's existing columns.
		
		.PARAMETER FilterWMIProperties
			This switch removes WMI properties that start with an underline.
	
		.EXAMPLE
			$DataTable = ConvertTo-DataTable -InputObject (Get-Process)
	#>
	[OutputType([System.Data.DataTable])]
	param(
	$InputObject, 
	[ValidateNotNull()]
	[System.Data.DataTable]$Table,
	[switch]$RetainColumns,
	[switch]$FilterWMIProperties)
	
	if($null -eq $Table)
	{
		$Table = New-Object System.Data.DataTable
	}
	
	if ($null -eq $InputObject)
	{
		$Table.Clear()
		return @( ,$Table)
	}
	
	if ($InputObject -is [System.Data.DataTable])
	{
		$Table = $InputObject
	}
	elseif ($InputObject -is [System.Data.DataSet] -and $InputObject.Tables.Count -gt 0)
	{
		$Table = $InputObject.Tables[0]
	}
	else
	{
		if (-not $RetainColumns -or $Table.Columns.Count -eq 0)
		{
			#Clear out the Table Contents
			$Table.Clear()
			
			if ($null -eq $InputObject) { return } #Empty Data
			
			$object = $null
			#find the first non null value
			foreach ($item in $InputObject)
			{
				if ($null -ne $item)
				{
					$object = $item
					break
				}
			}
			
			if ($null -eq $object) { return } #All null then empty
			
			#Get all the properties in order to create the columns
			foreach ($prop in $object.PSObject.Get_Properties())
			{
				if (-not $FilterWMIProperties -or -not $prop.Name.StartsWith('__')) #filter out WMI properties
				{
					#Get the type from the Definition string
					$type = $null
					
					if ($null -ne $prop.Value)
					{
						try { $type = $prop.Value.GetType() }
						catch { Out-Null }
					}
					
					if ($null -ne $type) # -and [System.Type]::GetTypeCode($type) -ne 'Object')
					{
						[void]$table.Columns.Add($prop.Name, $type)
					}
					else #Type info not found
					{
						[void]$table.Columns.Add($prop.Name)
					}
				}
			}
			
			if ($object -is [System.Data.DataRow])
			{
				foreach ($item in $InputObject)
				{
					$Table.Rows.Add($item)
				}
				return @( ,$Table)
			}
		}
		else
		{
			$Table.Rows.Clear()
		}
		
		foreach ($item in $InputObject)
		{
			$row = $table.NewRow()
			
			if ($item)
			{
				foreach ($prop in $item.PSObject.Get_Properties())
				{
					if ($table.Columns.Contains($prop.Name))
					{
						$row.Item($prop.Name) = $prop.Value
					}
				}
			}
			[void]$table.Rows.Add($row)
		}
	}
	
	return @(,$Table)
}
#endregion

$btnLoadCatalog_Click={
	If (Get-ChildItem $txtCatalogFile.Text -ErrorAction SilentlyContinue) {
		Load-Catalog $txtCatalogFile.Text
	} else {
		#Add-Type -AssemblyName "System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
		[void][System.Windows.Forms.MessageBox]::Show("Please specify a valid path to the catalog file.", "Error")
	}
}

$dvCatalog_CellEndEdit=[System.Windows.Forms.DataGridViewCellEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.DataGridViewCellEventArgs]
	
	$btnDownloadCatalog.Enabled = $false
	$btnAppBuild.Enabled = $false
	$btnSaveCatalogXML.Enabled = $true
}

$btnSaveCatalogXML_Click= {
	
	# Load catalog into variable
	
	If (Get-ChildItem $txtCatalogFile.Text -ErrorAction SilentlyContinue) {
		Try {
			[xml]$catalog = Get-Content $txtCatalogFile.Text
		} Catch {
			#Add-Type -AssemblyName "System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
			[void][System.Windows.Forms.MessageBox]::Show("Unable to parse catalog file.`r`n$($_.Exception.Message)", "Error")
			Return
		}
	} else {
		#Add-Type -AssemblyName "System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
		[void][System.Windows.Forms.MessageBox]::Show("Please specify a valid path to the catalog file.", "Error")
		Return
	}
	
	foreach ($row in $dvCatalog.Rows) {
		$appName = $row.cells[0].Value.ToString()
		$appPath = $row.cells[1].Value.ToString()
		$appExclude = $row.cells[2].Value.ToString()
		$appSupersede = $row.cells[3].Value.ToString()
		
		($catalog.NowDeploy.Applications.Application | Where-Object { $_.'#text' -eq $appName }).Path = $appPath
		($catalog.NowDeploy.Applications.Application | Where-Object { $_.'#text' -eq $appName }).Exclude = $appExclude
		($catalog.NowDeploy.Applications.Application | Where-Object { $_.'#text' -eq $appName }).Supersede = $appSupersede
	}
	
	ForEach ($row in $dvActions.Rows) {
		$actionName = $row.cells[0].Value.ToString()
		$actionScript = $row.cells[1].Value.ToString()
		$actionParam = $row.cells[2].Value.ToString()
		
		$catalog.NowDeploy.Actions[$actionName].script.file = $actionScript
		$catalog.NowDeploy.Actions[$actionName].script.argumentName = $actionParam
	}
	
	
	Try {
		$catalog.Save($txtCatalogFile.Text)
	} Catch {
		#Add-Type -AssemblyName "System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
		[void][System.Windows.Forms.MessageBox]::Show("Unable to save catalog file.", "Error")
	}
	
	$dvCatalog.Rows.Clear()
	$dvActions.Rows.Clear()
	
	Load-Catalog $txtCatalogFile.Text
	
	$btnDownloadCatalog.Enabled = $true
	$btnAppBuild.Enabled = $true
	$btnSaveCatalogXML.Enabled = $false
	
}

$txtLicenseKey_TextChanged={
	$btnSave.Enabled = $true
}

$txtServer_TextChanged={
	$btnSave.Enabled = $true
}

$txtSiteCode_TextChanged={
	$btnSave.Enabled = $true
}

$txtPackageSource_TextChanged={
	$btnSave.Enabled = $true
}

$txtLogFile_TextChanged={
	$btnSave.Enabled = $true
}

$txtCatalogFile_TextChanged={
	$btnSave.Enabled = $true
	$dvActions.Rows.Clear()
	$dvCatalog.Rows.Clear()
}


$btnChangeLogFile_Click={
	$newFile = $fileSave.ShowDialog()
	If ($newFile -eq [System.Windows.Forms.DialogResult]::OK) {
		$txtLogFile.Text = $fileSave.FileName
	}
}

$btnChangeCatalogFile_Click={
	$newFile = $fileSave.ShowDialog()
	If ($newFile -eq [System.Windows.Forms.DialogResult]::OK) {
		$txtCatalogFile.Text = $fileSave.FileName
	}
}


$dvCatalog_CellValueChanged=[System.Windows.Forms.DataGridViewCellEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.DataGridViewCellEventArgs]
	#TODO: Place custom script here
	$btnDownloadCatalog.Enabled = $false
	$btnAppBuild.Enabled = $false
	$btnSaveCatalogXML.Enabled = $true
	
}

$dvActions_CellValueChanged=[System.Windows.Forms.DataGridViewCellEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.DataGridViewCellEventArgs]
	#TODO: Place custom script here
	$btnDownloadCatalog.Enabled = $false
	$btnAppBuild.Enabled = $false
	$btnSaveCatalogXML.Enabled = $true
	
}

$btnDownloadCatalog_Click={
	
	$catalogMgr = Join-Path $global:ScriptDirectory -ChildPath "CatalogMgr.exe"
	
	If (-not (Get-ChildItem $catalogMgr -ErrorAction SilentlyContinue)) {
		#Add-Type -AssemblyName "System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
		[void][System.Windows.Forms.MessageBox]::Show("Cannot find $catalogMgr.  Please ensure the file is placed into the same directory as this script.", "Error") # Casting the method to [void] suppresses the output. 
		Return
	}
	
	$cmdArgs = "-key $($txtLicenseKey.Text) -Catalog `"$($txtCatalogFile.Text)`""
	
	#Add-Type -AssemblyName "System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
	$continue = [System.Windows.Forms.MessageBox]::Show("Execute the following command?`r`n`r`nCatalogMgr.exe $cmdArgs", "Permission to Execute","YesNo","Question")
	
	If ($continue -eq [System.Windows.Forms.DialogResult]::Yes) {
		Start-Process -FilePath $catalogMgr -ArgumentList $cmdArgs -Wait
		Load-Catalog $txtCatalogFile.Text
	}
}

$btnAppBuild_Click={
	
	$appBuild = Join-Path $global:ScriptDirectory -ChildPath "AppBuild.exe"
	
	If (-not (Get-ChildItem $appBuild -ErrorAction SilentlyContinue)) {
		#Add-Type -AssemblyName "System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
		[void][System.Windows.Forms.MessageBox]::Show("Cannot find $appBuild.  Please ensure the file is placed into the same directory as this script.", "Error") # Casting the method to [void] suppresses the output. 
		Return
	}
	
	$cmdArgs = "-key $($txtLicenseKey.Text) -catalog `"$($txtCatalogFile.Text)`" -Server `"$($txtServer.Text)`" -SiteCode `"$($txtSiteCode.Text)`" -PackageSource `"$($txtPackageSource.Text)`" -LogFileName `"$($txtLogFile.Text)`""
	
	#Add-Type -AssemblyName "System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
	$continue = [System.Windows.Forms.MessageBox]::Show("Execute the following command?`r`n`r`nCatalogMgr.exe $cmdArgs", "Permission to Execute", "YesNo", "Question")
	
	If ($continue -eq [System.Windows.Forms.DialogResult]::Yes) {
		Start-Process -FilePath $appBuild -ArgumentList $cmdArgs
	}
	
}
]]></Code>
  <Mode>1</Mode>
  <Assemblies />
</File>